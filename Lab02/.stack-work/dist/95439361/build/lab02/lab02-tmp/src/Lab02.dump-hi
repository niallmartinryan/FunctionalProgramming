
==================== FINAL INTERFACE ====================
2016-11-14 02:16:21.5021352 UTC

interface main@main:Lab02 7103
  interface hash: 185c0933023555388ec0b6019da29f5b
  ABI hash: bb26135f634a73ec47039c98e1ba6499
  export-list hash: 0eebfb81bc80192cd80f9c8413b8d060
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: dcb766dace778595e52a7224e6dbc70f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lab02._p1000
  Lab02._p3
  Lab02._p9
  Lab02._run_profile
  Lab02._s
  Lab02._s0
  Lab02._s1
  Lab02._s2
  Lab02._s3
  Lab02._s4
  Lab02._s5
  Lab02._s6
  Lab02._s7
  Lab02._s8
  Lab02._s9
  Lab02._ss
  Lab02.distance
  Lab02.findFastest
  Lab02.getMeasured
  Lab02.getPaths
  Lab02.maxSpeed
  Lab02.maxTail
  Lab02.pathDistance
  Lab02.pathInvariant
  Lab02.pathPace
  Lab02.pathSpeed
  Lab02.pathTime
  Lab02.segmentId
  Lab02.segmentInvariant
  Lab02.thisIsLab02
  Lab02.time
  Lab02.Distance
  Lab02.Pace
  Lab02.SegPath
  Lab02.Segment
  Lab02.SegmentId
  Lab02.Speed
  Lab02.Time
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 37c1dcdf6448d7800d277e5be0c3fc6f
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base ab3ff5d7de26c5c2e08d2bb04c08d54e
import  -/  base-4.8.2.0:GHC.Num 099c29dfc2c0e3c154d011e91b663293
import  -/  base-4.8.2.0:GHC.Real da292570a9ba3b498203d266364d0cfe
import  -/  base-4.8.2.0:GHC.Show 81f797f6fb519cae2341362c0c4308de
import  -/  base-4.8.2.0:Prelude 0f9dd1bcfa413fa55bb6dca444292bf6
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 85cf1b8b2d409827fbcd445bcd31da6b
d68609021688f9d41adbd0fe629d5142
  $w_s ::
    GHC.Integer.Type.Integer
    -> (# Lab02.SegmentId, Lab02.Distance, Lab02.Time #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Integer.Type.Integer ->
                 (# GHC.CString.unpackAppendCString#
                      "_s"#
                      (case GHC.Show.$w$cshowsPrec1
                              0
                              w
                              (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                       GHC.Types.: @ GHC.Types.Char ww3 ww4 }),
                    GHC.Integer.Type.plusInteger
                      Lab02._s12
                      (GHC.Integer.Type.timesInteger w (GHC.Real.^_$s^ Lab02._s11 w)),
                    GHC.Integer.Type.plusInteger
                      Lab02._p14
                      (GHC.Integer.Type.timesInteger Lab02._p11 w) #)) -}
d13f35a6d20f1336307956764ba9af92
  $w_ss ::
    GHC.Integer.Type.Integer
    -> (# Lab02.SegmentId, Lab02.Distance, Lab02.Time #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Integer.Type.Integer ->
                 (# GHC.CString.unpackAppendCString#
                      "_ss"#
                      (case GHC.Show.$w$cshowsPrec1
                              0
                              w
                              (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                       GHC.Types.: @ GHC.Types.Char ww3 ww4 }),
                    GHC.Integer.Type.plusInteger
                      Lab02._ss1
                      (GHC.Integer.Type.modInteger w Lab02._p11),
                    GHC.Integer.Type.plusInteger
                      (Lab02._run_profile_$s_run_profile w)
                      (GHC.Integer.Type.modInteger w Lab02._run_profile3) #)) -}
b19e91969499744f5cab22949fb494f1
  $wmaxTail ::
    Lab02.SegPath
    -> Lab02.Speed
    -> [(Lab02.SegPath, Lab02.Speed)]
    -> (# Lab02.SegPath, Lab02.Speed #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U(U)><S,1*U>,
     Inline: [0] -}
cdde7a5a234c032ba69770c49ffaab4f
  $wpathPace :: Lab02.SegPath -> GHC.Prim.Double#
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ w :: Lab02.SegPath ->
                 case GHC.Integer.Type.doubleFromInteger
                        (Lab02.pathTime w) of wild { DEFAULT ->
                 case GHC.Integer.Type.doubleFromInteger
                        (Lab02.pathDistance w) of wild1 { DEFAULT ->
                 GHC.Prim./##
                   (GHC.Prim.*## 100.0 wild)
                   (GHC.Prim.*## 6.0 wild1) } }) -}
d40d3faf092ca927faeadb71433d9fbe
  $wpathSpeed :: Lab02.SegPath -> GHC.Prim.Double#
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ w :: Lab02.SegPath ->
                 case GHC.Integer.Type.doubleFromInteger
                        (Lab02.pathDistance w) of wild { DEFAULT ->
                 case GHC.Integer.Type.doubleFromInteger
                        (Lab02.pathTime w) of wild1 { DEFAULT ->
                 GHC.Prim./## (GHC.Prim.*## 3.6 wild) wild1 } }) -}
005c10eb8258e88665be6511a3f6ec26
  $wsegmentInvariant ::
    Lab02.Distance -> Lab02.Time -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0],
     Unfolding: (\ ww :: Lab02.Distance ww1 :: Lab02.Time ->
                 case GHC.Integer.Type.gtInteger# ww Lab02._p1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Integer.Type.gtInteger#
                             ww1
                             Lab02._p1 of wild2 { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 } } }) -}
c6274c119d233bfb06e8f64b174a2e42
  type Distance = GHC.Integer.Type.Integer
c95e9df39c9952781a73defb76a02852
  type Pace = GHC.Types.Double
eaea20bc24bf89281eeaaeaad5a9df70
  type SegPath = [Lab02.Segment]
a788b50c749bfefb35f6e5c6ccfdd5a0
  type Segment = (Lab02.SegmentId, Lab02.Distance, Lab02.Time)
20a285b638b10eee59e9a5d4edb7781d
  type SegmentId = GHC.Base.String
133664b75ed45cf2e7d6305d7dc86025
  type Speed = GHC.Types.Double
94617752861551ee9bfcbd501a40698d
  type Time = GHC.Integer.Type.Integer
1644e0061fe16a4bdb2d64522ea7a0c4
  _p1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
a86f4e7127b8424248b8d06baad0ccdc
  _p10 ::
    ([GHC.Types.Char],
     GHC.Integer.Type.Integer,
     GHC.Integer.Type.Integer)
  {- Strictness: m,
     Unfolding: ((Lab02._p12, Lab02._p7, Lab02._p11)) -}
1d88c6e4d493d0a90cb74fa690b3ea38
  _p1000 :: [Lab02.Segment]
  {- Unfolding: (Lab02._p1000_go Lab02._p1) -}
713f0f38a4578b617c34bcd13fa7cf43
  _p1000_go ::
    GHC.Integer.Type.Integer
    -> [(Lab02.SegmentId, Lab02.Distance, Lab02.Time)]
  {- Arity: 1, Strictness: <S,U> -}
dfea5e728eb095a730a040738d91dfac
  _p11 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 5) -}
03864ea0e7fddc17035bdb590b5ea593
  _p12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_2"#) -}
4e0f74e412a254473b7e314e9a23adb0
  _p13 ::
    ([GHC.Types.Char],
     GHC.Integer.Type.Integer,
     GHC.Integer.Type.Integer)
  {- Strictness: m,
     Unfolding: ((Lab02._p15, Lab02._p7, Lab02._p14)) -}
d459577ddb1fae84c2704ab29ca8fbf5
  _p14 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 10) -}
69b1cd1c0ae7e09cac5230ca5b7c9f6e
  _p15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_1"#) -}
ea7f44d0bd36b7ea594152ffeabc0e99
  _p16 ::
    ([Lab02.Segment],
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment,
     Lab02.Segment)
  {- Unfolding: (case Lab02._p9_go Lab02._p1 of wild {
                   [] -> Lab02._p17 GHC.Prim.void#
                   : _s13 ds
                   -> case ds of wild1 {
                        [] -> Lab02._p17 GHC.Prim.void#
                        : _s14 ds1
                        -> case ds1 of wild2 {
                             [] -> Lab02._p17 GHC.Prim.void#
                             : _s15 ds2
                             -> case ds2 of wild3 {
                                  [] -> Lab02._p17 GHC.Prim.void#
                                  : _s16 ds3
                                  -> case ds3 of wild4 {
                                       [] -> Lab02._p17 GHC.Prim.void#
                                       : _s17 ds4
                                       -> case ds4 of wild5 {
                                            [] -> Lab02._p17 GHC.Prim.void#
                                            : _s18 ds5
                                            -> case ds5 of wild6 {
                                                 [] -> Lab02._p17 GHC.Prim.void#
                                                 : _s19 ds6
                                                 -> case ds6 of wild7 {
                                                      [] -> Lab02._p17 GHC.Prim.void#
                                                      : _s20 ds7
                                                      -> case ds7 of wild8 {
                                                           [] -> Lab02._p17 GHC.Prim.void#
                                                           : _s21 ds8
                                                           -> case ds8 of wild9 {
                                                                [] -> Lab02._p17 GHC.Prim.void#
                                                                : _s22 ds9
                                                                -> case ds9 of wild10 {
                                                                     []
                                                                     -> (wild,
                                                                         _s13,
                                                                         _s14,
                                                                         _s15,
                                                                         _s16,
                                                                         _s17,
                                                                         _s18,
                                                                         _s19,
                                                                         _s20,
                                                                         _s21,
                                                                         _s22)
                                                                     : ipv ipv1
                                                                     -> Lab02._p17
                                                                          GHC.Prim.void# } } } } } } } } } } }) -}
af4e340b71522ef5b03a7590b4a42b2a
  _p17 ::
    GHC.Prim.Void#
    -> ([Lab02.Segment],
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment,
        Lab02.Segment)
  {- Arity: 1, Strictness: <B,A>b -}
4ddc0c93f9afcf7e915cb7160cbb45c8
  _p2 ::
    [([GHC.Types.Char],
      GHC.Integer.Type.Integer,
      GHC.Integer.Type.Integer)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char],
                      GHC.Integer.Type.Integer,
                      GHC.Integer.Type.Integer)
                   Lab02._p10
                   Lab02._p4) -}
13a43d31c52a7103b4220618f21883da
  _p3 ::
    [([GHC.Types.Char],
      GHC.Integer.Type.Integer,
      GHC.Integer.Type.Integer)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char],
                      GHC.Integer.Type.Integer,
                      GHC.Integer.Type.Integer)
                   Lab02._p13
                   Lab02._p2) -}
00a0c0149c05a7a28c249acb553745e0
  _p4 ::
    [([GHC.Types.Char],
      GHC.Integer.Type.Integer,
      GHC.Integer.Type.Integer)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char],
                      GHC.Integer.Type.Integer,
                      GHC.Integer.Type.Integer)
                   Lab02._p5
                   (GHC.Types.[]
                      @ ([GHC.Types.Char],
                         GHC.Integer.Type.Integer,
                         GHC.Integer.Type.Integer))) -}
81f8a1e52638c5dcd2b11653fa78612d
  _p5 ::
    ([GHC.Types.Char],
     GHC.Integer.Type.Integer,
     GHC.Integer.Type.Integer)
  {- Strictness: m, Unfolding: ((Lab02._p8, Lab02._p7, Lab02._p6)) -}
b4f4bef7e411c2a8eff6160cb8804317
  _p6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 7) -}
7bbafe4e1a66b0832b1e2a76add22ca2
  _p7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 2) -}
cdbe5c2a1c883824a8be0a17f3912c25
  _p8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_3"#) -}
b784110b10b9c65cd139296481097842
  _p9 :: [Lab02.Segment]
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _p18 }) -}
20a4f732a396c23d31eb2dfc8f25bad0
  _p9_go ::
    GHC.Integer.Type.Integer
    -> [(Lab02.SegmentId, Lab02.Distance, Lab02.Time)]
  {- Arity: 1, Strictness: <S,U> -}
f47c4d9e1ffcac0c5911e3ff99cbfea9
  _run_profile :: GHC.Real.Integral a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),U(1*U,A,A,A,1*C1(C1(U)),A,A,A,A)><L,U> -}
c2b44e15158b1a4c64d9594404f4b5b7
  _run_profile1 :: Lab02.Time
  {- HasNoCafRefs, Unfolding: (__integer 4) -}
59674ab76007b3324da2974a5975b61b
  _run_profile2 :: Lab02.Time
  {- HasNoCafRefs, Unfolding: (__integer 6) -}
de4d0e0924b8df015b14ec50b562e29c
  _run_profile3 :: Lab02.Time
  {- HasNoCafRefs, Unfolding: (__integer 3) -}
8e6c7a1eb330745038703101cbc0fabf
  _run_profile4 :: Lab02.Time
  {- HasNoCafRefs, Unfolding: (__integer 20) -}
940eaac7828175b0e96c7c2b57eb5b2c
  _run_profile5 :: Lab02.Time
  {- HasNoCafRefs, Unfolding: (__integer 15) -}
5929a0f154ccb69921650aaaf40c86b3
  _run_profile_$s_run_profile :: Lab02.Time -> Lab02.Time
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ eta :: Lab02.Time ->
                 case GHC.Integer.Type.leInteger#
                        eta
                        Lab02._p14 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.leInteger#
                             eta
                             Lab02._run_profile5 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> case GHC.Integer.Type.leInteger#
                                  eta
                                  Lab02._run_profile4 of wild4 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                             GHC.Types.False
                             -> GHC.Integer.Type.plusInteger
                                  Lab02._run_profile3
                                  (GHC.Integer.Type.divInteger
                                     (GHC.Integer.Type.minusInteger eta Lab02._run_profile4)
                                     Lab02._p14)
                             GHC.Types.True -> Lab02._run_profile3 } }
                        GHC.Types.True -> Lab02._p7 } }
                   GHC.Types.True
                   -> GHC.Integer.Type.minusInteger
                        Lab02._run_profile2
                        (GHC.Integer.Type.divInteger
                           (GHC.Integer.Type.timesInteger Lab02._run_profile1 eta)
                           Lab02._p14) } }) -}
618fbb7d762247f1329efb3571248d6e
  _s :: GHC.Integer.Type.Integer -> Lab02.Segment
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Integer.Type.Integer ->
                 case Lab02.$w_s w of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
73eca750993bb2bbe8d8bc5fda82b724
  _s0 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s13 }) -}
0f422a328e1137080e779a6001533138
  _s1 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s14 }) -}
72675b47ad7e739d2baf14606b1f0cbb
  _s11 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer -1) -}
3719b767439e16d5fa9b8b54acf202b8
  _s12 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 100) -}
dc2f1b23346f5b3d65bad7cc43ab0120
  _s2 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s15 }) -}
38ee77ec11e7db7ed0f7eaa7cd13512c
  _s3 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s16 }) -}
895fc0ade95cfdcabaa5fbb2f9df5f95
  _s4 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s17 }) -}
736fb45c79c6687b9d6afa87da77d49e
  _s5 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s18 }) -}
f02d721aafa78bd8c86dfcdf738c7028
  _s6 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s19 }) -}
711722ed58cdcde4c491d7a51cb800b1
  _s7 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s20 }) -}
c28e718c03a8e7716fe91b489441c2f6
  _s8 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s21 }) -}
21e9c136da02625600e2ee5f1d6acb04
  _s9 :: Lab02.Segment
  {- Unfolding: (case Lab02._p16 of ds { (,,,,,,,,,,) _p18 _s13 _s14 _s15 _s16 _s17 _s18 _s19 _s20 _s21 _s22 ->
                 _s22 }) -}
7dde23d469a8b363334e39c75490e61f
  _ss :: GHC.Integer.Type.Integer -> Lab02.Segment
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Integer.Type.Integer ->
                 case Lab02.$w_ss w of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
6aa813062268fd26d087b48a56d74f83
  _ss1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 8) -}
225340f027b48e1eacad2fa76ccc26cb
  distance :: Lab02.Segment -> Lab02.Distance
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: (Lab02.SegmentId, Lab02.Distance, Lab02.Time) ->
                 case ds of wild { (,,) ds1 d ds2 -> d }) -}
44d80236662677e27f5ba6d6b737f151
  findFastest ::
    Lab02.Distance
    -> Lab02.SegPath -> GHC.Base.Maybe (Lab02.SegPath, Lab02.Speed)
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ rqdDist :: Lab02.Distance ds :: [Lab02.Segment] ->
                 case ds of wild {
                   [] -> GHC.Base.Nothing @ (Lab02.SegPath, Lab02.Speed)
                   : ipv ipv1
                   -> case GHC.Integer.Type.gtInteger#
                             rqdDist
                             (Lab02.pathDistance
                                (Lab02.getMeasured rqdDist wild)) of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False
                        -> GHC.Base.Just
                             @ (Lab02.SegPath, Lab02.Speed)
                             (case Lab02.getPaths rqdDist wild of wild3 {
                                [] -> Lab02.findFastest1 : x xs -> Lab02.maxTail x xs })
                        GHC.Types.True
                        -> GHC.Base.Nothing @ (Lab02.SegPath, Lab02.Speed) } } }) -}
72490a5734283ad4c0270089fea12d3a
  findFastest1 :: (Lab02.SegPath, Lab02.Speed)
  {- Strictness: b -}
909f9addaa4556488a625f25871249ed
  getMeasured :: Lab02.Distance -> Lab02.SegPath -> Lab02.SegPath
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
2fb8e96bbe74226c3ea9bd88b5c1a789
  getPaths ::
    Lab02.Distance -> Lab02.SegPath -> [(Lab02.SegPath, Lab02.Speed)]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
81445a8b7e8ffc0718e61d6201e59e59
  maxSpeed ::
    [(Lab02.SegPath, Lab02.Speed)] -> (Lab02.SegPath, Lab02.Speed)
  {- Arity: 1, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: [(Lab02.SegPath, Lab02.Speed)] ->
                 case ds of wild {
                   [] -> Lab02.findFastest1 : x xs -> Lab02.maxTail x xs }) -}
fff5f8d3a980900b0a87cdde7effd7bc
  maxTail ::
    (Lab02.SegPath, Lab02.Speed)
    -> [(Lab02.SegPath, Lab02.Speed)] -> (Lab02.SegPath, Lab02.Speed)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U(U))><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: (Lab02.SegPath, Lab02.Speed)
                   w1 :: [(Lab02.SegPath, Lab02.Speed)] ->
                 case w of ww { (,) ww1 ww2 ->
                 case Lab02.$wmaxTail ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
93418d8764d140cd7cfa8c1718c609a7
  pathDistance :: Lab02.SegPath -> Lab02.Distance
  {- Arity: 1, Strictness: <S,1*U> -}
e97d79d5f33addef5ff9fb5b0f4b14a5
  pathInvariant :: Lab02.SegPath -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: [Lab02.Segment] ->
                 case ds of wild {
                   [] -> GHC.Types.False
                   : ipv ipv1
                   -> (Lab02.pathInvariant_go wild)
                        `cast`
                      (Data.Monoid.NTCo:All[0]) }) -}
a5545208a9df4f7758c0587f51be2078
  pathInvariant_go :: [Lab02.Segment] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b8041bd6a336034a8e5b0e09b250e1c4
  pathPace :: Lab02.SegPath -> Lab02.Pace
  {- Arity: 1, Strictness: <S,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Lab02.SegPath ->
                 case Lab02.$wpathPace w of ww { DEFAULT -> GHC.Types.D# ww }) -}
ed1f30531f1954b8232c69855ee175c3
  pathSpeed :: Lab02.SegPath -> Lab02.Speed
  {- Arity: 1, Strictness: <S,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Lab02.SegPath ->
                 case Lab02.$wpathSpeed w of ww { DEFAULT -> GHC.Types.D# ww }) -}
039e5219a54129de7f82d64be601a29c
  pathTime :: Lab02.SegPath -> Lab02.Time
  {- Arity: 1, Strictness: <S,1*U> -}
91d3391e4c564bd7b4394aec00b766f4
  segmentId :: Lab02.Segment -> Lab02.SegmentId
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: (Lab02.SegmentId, Lab02.Distance, Lab02.Time) ->
                 case ds of wild { (,,) s ds1 ds2 -> s }) -}
821ee994177c8992b0997f19f79b4368
  segmentInvariant :: Lab02.Segment -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Lab02.Segment ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 Lab02.$wsegmentInvariant ww2 ww3 }) -}
7fb929bda420ca449bdc136c93e18128
  thisIsLab02 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "This is Lab 2"#) -}
d4c2cce08dc2249a9b0f7638ea98b5a7
  time :: Lab02.Segment -> Lab02.Time
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: (Lab02.SegmentId, Lab02.Distance, Lab02.Time) ->
                 case ds of wild { (,,) ds1 ds2 t -> t }) -}
"SPEC _run_profile @ Time" [ALWAYS] forall $dIntegral :: GHC.Real.Integral
                                                           Lab02.Time
  Lab02._run_profile @ GHC.Integer.Type.Integer $dIntegral
  = Lab02._run_profile_$s_run_profile
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

