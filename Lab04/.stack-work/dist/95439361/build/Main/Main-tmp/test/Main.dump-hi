
==================== FINAL INTERFACE ====================
2016-12-21 02:45:40.789094 UTC

interface main@main:Main 7103
  interface hash: 531ded3252fe6a4675f866c38620defa
  ABI hash: d4538cee95961348e93586d22fe40347
  export-list hash: 1f9710fad1ba34dca53caeaa4e61fc6e
  orphan hash: 3f56edab032b22fa573af4cb0caedb71
  flag hash: bb46907a74f9dbfc83435748e44855b5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.test_R_insert_br_new
  Main.test_R_insert_br_old
  Main.test_R_insert_emp
  Main.test_R_insert_leaf
  Main.test_R_lkp_branch
  Main.test_R_lkp_emp
  Main.test_R_lkp_leaf_fail
  Main.test_R_lkp_leaf_ok
  Main.test_R_map_branch
  Main.test_R_map_emp
  Main.test_R_map_leaf
  Main.test_R_show_br_emp_a1
  Main.test_R_show_br_left_a1_b2
  Main.test_R_show_br_right_a1_b2
  Main.test_R_show_empty
  Main.test_R_show_emptyX4
  Main.test_R_show_leaf_1a
  Main.test_R_show_leaf_a1
  Main.test_add_revise
  Main.test_done_exit
  Main.test_done_stay
  Main.test_empty_add
  Main.test_exit_result
  Main.test_fix_bad_branch
  Main.test_fix_bad_empty
  Main.test_fix_good_branch
  Main.test_fix_good_empty
  Main.test_help
  Main.test_list
  Main.test_prompt
  Main.test_remove_branch
  Main.test_remove_leaf
  Main.tests
module dependencies: BinTree Lab04 REPL
package dependencies: HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b
                      QuickCheck-2.8.2@Quick_57CTPkkZNnkFbbczhO1353
                      Win32-2.3.1.0@Win32_ELFLzTRksT8Dql3wobiWvb
                      ansi-terminal-0.6.2.3@ansit_17j0yRazsq84la3DzBiNwu
                      ansi-wl-pprint-0.6.7.3@ansiw_6EriyYVvQuNHdLfQN1IBjX
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hostname-1.0@hostn_8259ix4SDG1KmuPcUnOScA integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      random-1.1@rando_7Qv4dDT5WBF9U3tMWkytIb
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      test-framework-0.8.1.1@testf_2RKbXiMlif20IWKx4lR7cW
                      test-framework-quickcheck2-0.3.0.3@testf_7xHQ2BMWV71Ktv2HDxmg3M
                      test-framework-hunit-0.3.0.2@testf_AlQmNT2auEZFV1ZYXzMnwS
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tf-random-0.5@tfran_5P5699oQ23G51oobh6Q5M2
                      time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      xml-1.3.14@xml_AyrkYt7P0aQDgNiMBs2bvw
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz:Data.Time.Format.Parse
         time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
import  -/  HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b:Test.HUnit 66bcf89478e54cab0bc320939852d08e
import  -/  HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b:Test.HUnit.Base 63995a1e243b66a22ec8bec4595f2564
import  -/  base-4.8.2.0:Data.Char 402e29ff351f87d4b376346195635026
import  -/  base-4.8.2.0:Data.Foldable 37c1dcdf6448d7800d277e5be0c3fc6f
import  -/  base-4.8.2.0:Data.List 926725e221153215ce668813eb3b43b5
import  -/  base-4.8.2.0:Data.OldList 85a9161bb780adfff7636d3ede148cf0
import  -/  base-4.8.2.0:GHC.Base ab3ff5d7de26c5c2e08d2bb04c08d54e
import  -/  base-4.8.2.0:GHC.Char 612e350e38947989d78fc181dfd596f1
import  -/  base-4.8.2.0:GHC.IO a27f051a1966e7533609ff8c1f989e5c
import  -/  base-4.8.2.0:GHC.IO.Handle c8dccd17c21531c8116a59962e0dfdf5
import  -/  base-4.8.2.0:GHC.IO.Handle.FD 2a69a258e3bff1c116eb2aa0151a648b
import  -/  base-4.8.2.0:GHC.IO.IOMode 9ad321c895ae83e766b57434805f9dff
import  -/  base-4.8.2.0:GHC.List ab53ad3f819f64915f1f91641b6e3255
import  -/  base-4.8.2.0:GHC.Show 81f797f6fb519cae2341362c0c4308de
import  -/  base-4.8.2.0:GHC.Unicode cdf84fc3abbaf34ba6b6645291cef991
import  -/  base-4.8.2.0:Prelude 0f9dd1bcfa413fa55bb6dca444292bf6
import  -/  base-4.8.2.0:System.IO 1df80b4c86d7c7612f2b342f2d372da9
import  -/  base-4.8.2.0:System.IO.Unsafe 8c6211e2061aed254f1da47ce9735d0b
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  BinTree ca58cf06d4f77796ae5bc113bccbfd99
  exports: 1aa04a492847ef4ea9c91d8d8caf1be1
  BinTree d0f265c187c8504b74c2bf81f9febf25
  Branch 59d088c252cdb69c36b53e9b8a9a3c5b
  Empty 46e9826ce6d7f443d4f0ad8c25138d60
  Leaf 15c63f6e47435bf291a5bcfe5d609873
  alphaChr 5b043f92b796733c408871f6389f82d7
  alphaOrd b4723a52eae01ac8eabcddada5e5a5df
  br_emp_a1 57dae0083d5b596b7c7bb3f48fd35fbb
  br_left_a1_b2 519efa2003ebf9ddd426f7e01dd7979c
  br_right_a1_b2 30ec20057b74ee4e2ff7e2fa9fa4fbd0
  empCI 518ef5800ebf4cca1338178733af9f7e
  empIC db5e53e4f4a9e9e134367aad0c30ea34
  emptyX4 eacd9ec007eccfc30e607944aec0107b
  ins1 61444e232b88d872c3f2f9fe0e3b48fe
  ins2 d1b308fd9afb909a173e7522d0a0142a
  ins3 3c04a51cf3968b6cb800f4969a549e86
  ins4 808730d3cbf1bfbac1eddfcb45c6eea1
  leaf_1a 40d4bb12c88237dbbbd488eddc36e145
  leaf_2b 397dcf4c95c0eab680d5665de0a5c112
  leaf_a1 812d4800e3f062b5ed5f9d7aadce9c74
  leaf_b2 b15d0321aa6b2a6315f83414c6eaafa1
  treeLookup 5e5c85b2db1bc6943f3a79d5736fa541
  treeMap afdfb1ae7062ac0b50035777a79a4f8a
import  -/  Lab04 9921dcadd887e89d79918b853be3a41b
  exports: 49c3299c7d39f66724a7a1c660e80a17
  State fb9a42da6358ac891eeebedd5320dbf0
  done04 8d5bd6616f40888ac0dd167abbcd17d3
  execute04 423ce7c2feaf485b95060f2a6427f767
  exit04 1435a680800a153ca761b5dcb3b6ac44
  mkprompt 275da4e414f27f7afadcf7291d62a7ae
import  -/  REPL 803d38c01d6a955fa575e12e6fa4d5bb
  exports: d909f20870ecd914effb556280d3fcfc
import  -/  test-framework-0.8.1.1@testf_2RKbXiMlif20IWKx4lR7cW:Test.Framework 4f08929b71b5087be67282460e63535b
import  -/  test-framework-0.8.1.1@testf_2RKbXiMlif20IWKx4lR7cW:Test.Framework.Core d3df54995853b9ca4f372aa658959b9c
import  -/  test-framework-0.8.1.1@testf_2RKbXiMlif20IWKx4lR7cW:Test.Framework.Runners.Console 595434005880a83e089bbd045c1d9e7c
import  -/  test-framework-quickcheck2-0.3.0.3@testf_7xHQ2BMWV71Ktv2HDxmg3M:Test.Framework.Providers.QuickCheck2 4b8fa2bebfc8d26292d84dc240e237ef
import  -/  test-framework-hunit-0.3.0.2@testf_AlQmNT2auEZFV1ZYXzMnwS:Test.Framework.Providers.HUnit a5389ea4070ab6af598268a3ae2d0864
46380c61ca6d4961c78444d0eb4ade89
  $s$fEq(,) ::
    GHC.Classes.Eq
      (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                     GHC.Types.Float)
                  (GHC.Classes.$fEq(,)_$c==
                     @ (BinTree.BinTree GHC.Base.String GHC.Types.Float)
                     @ GHC.Types.Float
                     Main.$s$fEq(,)1
                     GHC.Classes.$fEqFloat)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ (BinTree.BinTree GHC.Base.String GHC.Types.Float)
                     @ GHC.Types.Float
                     Main.$s$fEq(,)1
                     GHC.Classes.$fEqFloat) -}
7e91fbd726d7297cb9f3621c72f62ea1
  $s$fEq(,)1 ::
    GHC.Classes.Eq (BinTree.BinTree GHC.Base.String GHC.Types.Float)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fEq(,)_$s$fEqBinTree -}
e5909716fc602e4d893ab502a4ee36bf
  $s$fEq(,)2 ::
    BinTree.BinTree [GHC.Types.Char] GHC.Types.Float
    -> BinTree.BinTree [GHC.Types.Char] GHC.Types.Float
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a1 :: BinTree.BinTree [GHC.Types.Char] GHC.Types.Float
                   b :: BinTree.BinTree [GHC.Types.Char] GHC.Types.Float ->
                 case BinTree.$fEqBinTree_$c==
                        @ [GHC.Types.Char]
                        @ GHC.Types.Float
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        GHC.Classes.$fEqFloat
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
465145f85e8d185322cc4de56a116f8b
  $s$fEq(,)3 ::
    GHC.Classes.Eq
      ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
        GHC.Types.Float),
       GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float),
                     GHC.Types.Bool)
                  (GHC.Classes.$fEq(,)_$c==
                     @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                        GHC.Types.Float)
                     @ GHC.Types.Bool
                     Main.$s$fEq(,)4
                     GHC.Classes.$fEqBool)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                        GHC.Types.Float)
                     @ GHC.Types.Bool
                     Main.$s$fEq(,)4
                     GHC.Classes.$fEqBool) -}
d35a1cdfc97c7635315b7a65ad7a1c1c
  $s$fEq(,)4 ::
    GHC.Classes.Eq
      (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fEq(,) -}
56ca4b1bf52cf6dcd6e0fc338154a7c3
  $s$fEq(,)_$s$fEqBinTree ::
    GHC.Classes.Eq (BinTree.BinTree [GHC.Types.Char] GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree [GHC.Types.Char] GHC.Types.Float)
                  (BinTree.$fEqBinTree_$c==
                     @ [GHC.Types.Char]
                     @ GHC.Types.Float
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     GHC.Classes.$fEqFloat)
                  Main.$s$fEq(,)2 -}
43920f215c7c23edfae310ab8bf490fa
  $s$fEqBinTree ::
    GHC.Classes.Eq (BinTree.BinTree GHC.Types.Int [GHC.Types.Int])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Types.Int [GHC.Types.Int])
                  (BinTree.$fEqBinTree_$c==
                     @ GHC.Types.Int
                     @ [GHC.Types.Int]
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEq[]_$s$fEq[])
                  Main.$s$fEqBinTree1 -}
09ba4cb77b883e3f361c5492f82e46d5
  $s$fEqBinTree1 ::
    BinTree.BinTree GHC.Types.Int [GHC.Types.Int]
    -> BinTree.BinTree GHC.Types.Int [GHC.Types.Int] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a1 :: BinTree.BinTree GHC.Types.Int [GHC.Types.Int]
                   b :: BinTree.BinTree GHC.Types.Int [GHC.Types.Int] ->
                 case BinTree.$fEqBinTree_$c==
                        @ GHC.Types.Int
                        @ [GHC.Types.Int]
                        GHC.Classes.$fEqInt
                        GHC.Classes.$fEq[]_$s$fEq[]
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
03b891552ff2cc46f7812a7690679616
  $s$fEqBinTree2 ::
    GHC.Classes.Eq (BinTree.BinTree GHC.Types.Int GHC.Types.Char)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Types.Int GHC.Types.Char)
                  (BinTree.$fEqBinTree_$c==
                     @ GHC.Types.Int
                     @ GHC.Types.Char
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqChar)
                  Main.$s$fEqBinTree3 -}
998c8bd2e3695f77f3db30e68b27f8f9
  $s$fEqBinTree3 ::
    BinTree.BinTree GHC.Types.Int GHC.Types.Char
    -> BinTree.BinTree GHC.Types.Int GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a1 :: BinTree.BinTree GHC.Types.Int GHC.Types.Char
                   b :: BinTree.BinTree GHC.Types.Int GHC.Types.Char ->
                 case BinTree.$fEqBinTree_$c==
                        @ GHC.Types.Int
                        @ GHC.Types.Char
                        GHC.Classes.$fEqInt
                        GHC.Classes.$fEqChar
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
234dd44d9f06f1c2a3821db44af828e2
  $s$fEqBinTree4 ::
    GHC.Classes.Eq (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
                  (BinTree.$fEqBinTree_$c==
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEqInt)
                  Main.$s$fEqBinTree5 -}
89ffd6bc0b1e5e8fd077671df3ef3325
  $s$fEqBinTree5 ::
    BinTree.BinTree GHC.Types.Char GHC.Types.Int
    -> BinTree.BinTree GHC.Types.Char GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a1 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
                   b :: BinTree.BinTree GHC.Types.Char GHC.Types.Int ->
                 case BinTree.$fEqBinTree_$c==
                        @ GHC.Types.Char
                        @ GHC.Types.Int
                        GHC.Classes.$fEqChar
                        GHC.Classes.$fEqInt
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f89e2dc2d4678185ab1378a155291c8b
  $s$fEqMaybe :: GHC.Classes.Eq (GHC.Base.Maybe GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  Main.$s$fEqMaybe1
                  (GHC.Base.$fEqMaybe_$c/= @ GHC.Types.Int GHC.Classes.$fEqInt) -}
f424f16db69205d8f2e5f596f54823e1
  $s$fEqMaybe1 ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: GHC.Base.Maybe GHC.Types.Int
                   ds1 :: GHC.Base.Maybe GHC.Types.Int ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just a1
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } }) -}
04537844feb2f19b2d21bf5c52a0174c
  $s$fShow(,) ::
    GHC.Show.Show
      (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                     GHC.Types.Float)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ (BinTree.BinTree GHC.Base.String GHC.Types.Float)
                     @ GHC.Types.Float
                     Main.$s$fShow(,)1
                     GHC.Float.$fShowFloat)
                  Main.$s$fShow(,)_$s$fShow(,)_$cshow
                  Main.$s$fShow(,)_$s$fShow(,)_$cshowList -}
a4cf17633f454dbbc55e0d79aecea56e
  $s$fShow(,)1 ::
    GHC.Show.Show (BinTree.BinTree GHC.Base.String GHC.Types.Float)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fShow(,)_$s$fShowBinTree -}
2c46156a50c1a43ced60d6c4d0bc2689
  $s$fShow(,)2 ::
    BinTree.BinTree [GHC.Types.Char] GHC.Types.Float -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: BinTree.BinTree [GHC.Types.Char] GHC.Types.Float ->
                 BinTree.treeShow
                   @ [GHC.Types.Char]
                   @ GHC.Types.Float
                   GHC.Show.$fShow[]_$s$fShow[]1
                   GHC.Float.$fShowFloat
                   GHC.Types.False
                   eta) -}
58fe82ce7ceb4f60e0ba6276215e1afd
  $s$fShow(,)3 ::
    GHC.Types.Int
    -> BinTree.BinTree [GHC.Types.Char] GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: BinTree.BinTree [GHC.Types.Char] GHC.Types.Float
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (BinTree.treeShow
                         @ [GHC.Types.Char]
                         @ GHC.Types.Float
                         GHC.Show.$fShow[]_$s$fShow[]1
                         GHC.Float.$fShowFloat
                         GHC.Types.False
                         x))
                   s) -}
95054bb451c594a49f4484f6f3bd132a
  $s$fShow(,)4 ::
    GHC.Show.Show
      ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
        GHC.Types.Float),
       GHC.Types.Bool)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float),
                     GHC.Types.Bool)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                        GHC.Types.Float)
                     @ GHC.Types.Bool
                     Main.$s$fShow(,)5
                     GHC.Show.$fShowBool)
                  Main.$s$fShow(,)_$s$fShow(,)_$cshow1
                  Main.$s$fShow(,)_$s$fShow(,)_$cshowList1 -}
ed2cebaddc0f83875b20542401edd166
  $s$fShow(,)5 ::
    GHC.Show.Show
      (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fShow(,) -}
f248c8c560d03a490b1baf8d37a36144
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ x :: (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                         GHC.Types.Float) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float)
                   @ GHC.Types.Float
                   Main.$s$fShow(,)1
                   GHC.Float.$fShowFloat
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3f077f5da21b30ddfd42658fbbd62ca6
  $s$fShow(,)_$s$fShow(,)_$cshow1 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U,1*U(U)),U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ x :: ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                          GHC.Types.Float),
                         GHC.Types.Bool) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   @ GHC.Types.Bool
                   Main.$s$fShow(,)5
                   GHC.Show.$fShowBool
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e1129f1eac440c93572a0290c9e40a18
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [(BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [(BinTree.BinTree GHC.Base.String GHC.Types.Float,
                            GHC.Types.Float)]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ (BinTree.BinTree GHC.Base.String GHC.Types.Float)
                      @ GHC.Types.Float
                      Main.$s$fShow(,)1
                      GHC.Float.$fShowFloat
                      GHC.Show.shows18)
                   eta
                   eta1) -}
78f868cd1074208451179309c3f7c545
  $s$fShow(,)_$s$fShow(,)_$cshowList1 ::
    [((BinTree.BinTree GHC.Base.String GHC.Types.Float,
       GHC.Types.Float),
      GHC.Types.Bool)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                             GHC.Types.Float),
                            GHC.Types.Bool)]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                         GHC.Types.Float)
                      @ GHC.Types.Bool
                      Main.$s$fShow(,)5
                      GHC.Show.$fShowBool
                      GHC.Show.shows18)
                   eta
                   eta1) -}
e67519234de27504980e1e4d47ccadc6
  $s$fShow(,)_$s$fShowBinTree ::
    GHC.Show.Show (BinTree.BinTree [GHC.Types.Char] GHC.Types.Float)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree [GHC.Types.Char] GHC.Types.Float)
                  Main.$s$fShow(,)3
                  Main.$s$fShow(,)2
                  (BinTree.$fShowBinTree_$cshowList
                     @ [GHC.Types.Char]
                     @ GHC.Types.Float
                     GHC.Show.$fShow[]_$s$fShow[]1
                     GHC.Float.$fShowFloat) -}
2d1b2b9a9efa107f50f059695b18bc93
  $s$fShowBinTree ::
    GHC.Show.Show (BinTree.BinTree GHC.Types.Int [GHC.Types.Int])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Types.Int [GHC.Types.Int])
                  Main.$s$fShowBinTree2
                  Main.$s$fShowBinTree1
                  (BinTree.$fShowBinTree_$cshowList
                     @ GHC.Types.Int
                     @ [GHC.Types.Int]
                     GHC.Show.$fShowInt
                     GHC.Show.$fShow[]_$s$fShow[]) -}
89eda45fe351bdebf1f70b27f5432bf3
  $s$fShowBinTree1 ::
    BinTree.BinTree GHC.Types.Int [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: BinTree.BinTree GHC.Types.Int [GHC.Types.Int] ->
                 BinTree.treeShow
                   @ GHC.Types.Int
                   @ [GHC.Types.Int]
                   GHC.Show.$fShowInt
                   GHC.Show.$fShow[]_$s$fShow[]
                   GHC.Types.False
                   eta) -}
1eef14aa3070848a034e4530fd306062
  $s$fShowBinTree2 ::
    GHC.Types.Int
    -> BinTree.BinTree GHC.Types.Int [GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: BinTree.BinTree GHC.Types.Int [GHC.Types.Int]
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (BinTree.treeShow
                         @ GHC.Types.Int
                         @ [GHC.Types.Int]
                         GHC.Show.$fShowInt
                         GHC.Show.$fShow[]_$s$fShow[]
                         GHC.Types.False
                         x))
                   s) -}
fa97864f3d8d156d6e58fe652c9d8d0d
  $s$fShowBinTree3 ::
    GHC.Show.Show (BinTree.BinTree GHC.Types.Int GHC.Types.Char)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Types.Int GHC.Types.Char)
                  Main.$s$fShowBinTree5
                  Main.$s$fShowBinTree4
                  (BinTree.$fShowBinTree_$cshowList
                     @ GHC.Types.Int
                     @ GHC.Types.Char
                     GHC.Show.$fShowInt
                     GHC.Show.$fShowChar) -}
7aa603db1833f5443f11e34d1ea07ec5
  $s$fShowBinTree4 ::
    BinTree.BinTree GHC.Types.Int GHC.Types.Char -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: BinTree.BinTree GHC.Types.Int GHC.Types.Char ->
                 BinTree.treeShow
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowChar
                   GHC.Types.False
                   eta) -}
52c4cd0f66bf45ab9fdf6d9ac45e3073
  $s$fShowBinTree5 ::
    GHC.Types.Int
    -> BinTree.BinTree GHC.Types.Int GHC.Types.Char -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: BinTree.BinTree GHC.Types.Int GHC.Types.Char
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (BinTree.treeShow
                         @ GHC.Types.Int
                         @ GHC.Types.Char
                         GHC.Show.$fShowInt
                         GHC.Show.$fShowChar
                         GHC.Types.False
                         x))
                   s) -}
ffae00d820491b83d976de54505b19ab
  $s$fShowBinTree6 ::
    GHC.Show.Show (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
                  Main.$s$fShowBinTree8
                  Main.$s$fShowBinTree7
                  (BinTree.$fShowBinTree_$cshowList
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt) -}
8ddd89290e2f46587d65b5a7e1d53d09
  $s$fShowBinTree7 ::
    BinTree.BinTree GHC.Types.Char GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: BinTree.BinTree GHC.Types.Char GHC.Types.Int ->
                 BinTree.treeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   GHC.Types.False
                   eta) -}
f209b44875daef0b238744ba3c8e0867
  $s$fShowBinTree8 ::
    GHC.Types.Int
    -> BinTree.BinTree GHC.Types.Char GHC.Types.Int -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   x :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
                   s :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (BinTree.treeShow
                         @ GHC.Types.Char
                         @ GHC.Types.Int
                         GHC.Show.$fShowChar
                         GHC.Show.$fShowInt
                         GHC.Types.False
                         x))
                   s) -}
3fddae24968a1075b09eb128e14a07bd
  $s$fShowMaybe :: GHC.Show.Show (GHC.Base.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (GHC.Show.$fShowMaybe_$cshow @ GHC.Types.Int GHC.Show.$fShowInt)
                  Main.$s$fShowMaybe1 -}
becdc563893b5fd4d3facf5b47009dda
  $s$fShowMaybe1 :: [GHC.Base.Maybe GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [GHC.Base.Maybe GHC.Types.Int] eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.shows18)
                   eta
                   eta1) -}
15c464602349da6adfd6a610b25dfe4a
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
f2461023317d7c04c6fa9730a45d7406
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Framework.Runners.Console.defaultMain1
                   Main.tests) -}
a7a6c7c171fc1865966371fb928c17d7
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
3c02fd8d8df475465fb34987c9f19e2d
  test_R_insert_br_new :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests361 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
03933fa11d89209395c23c367d73d723
  test_R_insert_br_old :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests347 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
9510493ff2148886871af854ab66c78e
  test_R_insert_emp :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests384 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d65f710c54929504c078108493cf67f0
  test_R_insert_leaf :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests373 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
645dc9733011d3866b2f3e49506f92a7
  test_R_lkp_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests292 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
511feabc21d49e72280327fddde9e84e
  test_R_lkp_emp :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests335 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
2e6a72898de31b4fc361653554a869fc
  test_R_lkp_leaf_fail :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests322 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
9c8cdcd141da71a1bbd3bfeb64cd81b6
  test_R_lkp_leaf_ok :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests307 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
0de193d3aa6818dd0300401538db9536
  test_R_map_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests393 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e8eddf9ad49dfb206978788d0e7c2cd9
  test_R_map_emp :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests420 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
b20fbbba8e9dcea256df75b4ae078f47
  test_R_map_leaf :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests409 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
0ace3e3a38f40ccf620b3dea3f9d8565
  test_R_show_br_emp_a1 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests465 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1fc97532ac02a3efb3cd62d18767136b
  test_R_show_br_left_a1_b2 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests453 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
741a0f93c78c409edc1b35752e4f06b2
  test_R_show_br_right_a1_b2 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests442 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
4bb69605eeed78e75274a616ce020e2a
  test_R_show_empty :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests496 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
cdb917e3847c4e5441194d28f335104e
  test_R_show_emptyX4 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests431 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
155fbcfac68ab10bf7ce5c9c51bd5c81
  test_R_show_leaf_1a :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests475 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
28d7a9965d8caf36105b4b45a1a8848f
  test_R_show_leaf_a1 :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests486 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
7b9e94be2f2056792dce2014330c61e9
  test_add_revise :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests176 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
a72b829f1327d810d22c59013013ab84
  test_done_exit :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests240 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5903f8bd04d7e11cf4dd2ac246f355db
  test_done_stay :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests222 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
b950a563e1b18b40905b76ffa7e694fc
  test_empty_add :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests188 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
9306448c3a263a95ebb7798287cd7951
  test_exit_result :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests204 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
25329511d37a0558d5409b7e63421e40
  test_fix_bad_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests135 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
93948eb0f9bd13eec44610e1a051c5e9
  test_fix_bad_empty :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests162 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e70a667976a5b6b11f60e437ba5129a4
  test_fix_good_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests114 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
8123b99a5bd5ff271b695343de4d4d91
  test_fix_good_empty :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests149 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
f892f69c95a997e66aa296e592246ba9
  test_help :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests17 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
4d03665d2332ec87c694fd593887dae5
  test_list :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests49 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
ca0f0d780627ef6f323755d200f97468
  test_prompt :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests255 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e1199686ab723c3f91623630e370f0a8
  test_remove_branch :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests79 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
26ef9768a989d7dd335e3739ba7cad40
  test_remove_leaf :: Test.HUnit.Lang.Assertion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tests100 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
6d457bb976c53badadd90bd90b0ad3e5
  tests :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests272
                   Main.tests1) -}
a6bee540c6c931dbc703d968074fd67f
  tests1 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests252
                   Main.tests2) -}
abd6bf4cac68f47f3a23f0326a4ff05a
  tests10 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests134
                   Main.tests11) -}
a54ca3343c5c04107fa08aea2f467345
  tests100 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests106
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)
                   Main.$s$fShow(,)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests105
                   Main.tests101
                   eta2) -}
d692081f6a199562f7e34acadfb51d92
  tests101 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests102
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <(BinTree.BinTree GHC.Base.String GHC.Types.Float,
                               GHC.Types.Float)>_R))) -}
d3f39501ebd49d7c2479fac248d08d8e
  tests102 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (BinTree.BinTree GHC.Base.String GHC.Types.Float,
           GHC.Types.Float) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests88
                        GHC.IO.IOMode.ReadMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests87
                        GHC.IO.IOMode.AppendMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Lab04.execute1
                        ipv1
                        ipv3
                        Main.tests30
                        Main.tests103
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.hClose1 ipv3 ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv5 #) } } } } } }) -}
f97281a7f6497d4d8d47d2cf12dda1b0
  tests103 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests104, Main.tests58)) -}
e927197bce72377f5613e3c2eab9d592
  tests104 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Leaf
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests59
                   Main.tests58) -}
dd9c02180c0cf0d76c5fb01acf9b4125
  tests105 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests91, Main.tests21)) -}
c038a990c93a206cc70e74d5d860b922
  tests106 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests107) -}
b19b70ff0426e66eee0cf058ca634f4c
  tests107 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests108) -}
e2a1156e470da506890d20496f9f1120
  tests108 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests109
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
cfb08c41c419305337bc41d3f497607b
  tests109 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests110)) -}
32f1b178a6a69268b7236df52014d4b5
  tests11 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests113
                   Main.tests12) -}
4b1041ed94959cb5c2c352bf5e0bf623
  tests110 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests111
                   Main.tests41
                   Main.tests111
                   Main.tests40) -}
407dce8a470a1386f12f2f9877acfc02
  tests111 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 131) -}
ca65b42f839ea059ece868fbcc1d55e4
  tests112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Remove Leaf {2 marks}"#) -}
11886965f20e00bd0ead0b909a9714e2
  tests113 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests133
                   Main.tests114
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
615932e49a66091f1475d26f2814464c
  tests114 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   Main.tests127
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)3
                   Main.$s$fShow(,)4
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests126
                   Main.tests115
                   eta2) -}
7db44c042e1f9395d104f954cfd8e81e
  tests115 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   Main.tests116
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                                GHC.Types.Float),
                               GHC.Types.Bool)>_R))) -}
0cddc263a1542a13e5325061f65f9c7f
  tests116 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
            GHC.Types.Float),
           GHC.Types.Bool) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests125
                        GHC.IO.IOMode.WriteMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case Lab04.execute1
                        GHC.IO.Handle.FD.stdin
                        ipv1
                        Main.tests32
                        Main.tests117
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests125
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    (ipv3, GHC.List.null @ GHC.Types.Char ipv9) #) } } } } } }) -}
5f24a470a4fd5adf8c59d1dbf252b37a
  tests117 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests119, Main.tests118)) -}
7fbfab28b2bb9eba570291615222d964
  tests118 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 42.0) -}
e29297eb43d3e3c76e446195a5b7544a
  tests119 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Branch
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   (BinTree.Empty @ GHC.Base.String @ GHC.Types.Float)
                   Main.tests124
                   Main.tests123
                   Main.tests120) -}
7820b8087035eeccc0931097a4a04fb3
  tests12 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests99
                   Main.tests13) -}
b6a6405a7b09daf090080cc4e0ad262d
  tests120 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Leaf
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests122
                   Main.tests121) -}
62a8d2b8700c875bef450afcb38f1aeb
  tests121 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 31.0) -}
cddf1260aafe308ae90064264cacbf20
  tests122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "b"#) -}
71c3617c1cdb994889467c1e5625b070
  tests123 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 11.0) -}
432588eff1aa4fb12f65bb2b7fe8a4bf
  tests124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "a"#) -}
5f84f9a7ce60b89c256a75d5dac092ac
  tests125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/fix_good_branch.log"#) -}
030bf1e4435e7b56e2fed3b7c8710caf
  tests126 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- Unfolding: ((Main.tests117, GHC.Types.True)) -}
9696646c639744613cc96447f83d9ba9
  tests127 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests128) -}
fd863934cc9f698ebbfcf9e0b7623de8
  tests128 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests129) -}
0917610857cd45299045b562731bb162
  tests129 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests130
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
30313f8eb356bbb9ca714ad7a4e078cc
  tests13 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests78
                   Main.tests14) -}
6311bddbd51a77ca84ac428d810f295f
  tests130 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests131)) -}
a79c0bbd06502e6c275da5704d3744f9
  tests131 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests132
                   Main.tests41
                   Main.tests132
                   Main.tests40) -}
d3df1b514053afce6b9588030e26f893
  tests132 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 121) -}
c6506fab1aa7d19c67048add76c2e2d8
  tests133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Fix Good Branch {1 mark}"#) -}
8a98e3f16df235fd82596ae7abb0851c
  tests134 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests147
                   Main.tests135
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
a8e3071be58994d6c40ed0aa1b3c8325
  tests135 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   Main.tests141
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)3
                   Main.$s$fShow(,)4
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests140
                   Main.tests136
                   eta2) -}
db858064799263a4bb34addb238df9c4
  tests136 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   Main.tests137
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                                GHC.Types.Float),
                               GHC.Types.Bool)>_R))) -}
61126441b4e60e09f3c87dfa5916f820
  tests137 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
            GHC.Types.Float),
           GHC.Types.Bool) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests139
                        GHC.IO.IOMode.WriteMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case Lab04.execute1
                        GHC.IO.Handle.FD.stdin
                        ipv1
                        Main.tests32
                        Main.tests138
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests139
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    (ipv3, GHC.List.null @ GHC.Types.Char ipv9) #) } } } } } }) -}
c1e001f77640c34db0fcebe4ff7a2d6b
  tests138 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests119, Main.tests58)) -}
50ea09e8efc695890793b358f068a906
  tests139 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/fix_bad_branch.log"#) -}
503fdcadcb4dd96f5a2419cf0236d5c1
  tests14 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests48
                   Main.tests15) -}
28c99daeae8b18a1686462a945d35f1c
  tests140 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- Unfolding: ((Main.tests117, GHC.Types.False)) -}
4b5e4ce5937561c9c34614315839758e
  tests141 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests142) -}
4e20bb42a4fcd02b5d9267dc19f4f9d1
  tests142 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests143) -}
9f3727d7d867c4a13ca04aba2fd33417
  tests143 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests144
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
b559d69f6125390cf1aeca9e324d84c0
  tests144 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests145)) -}
a4c5b943b1e1341bb23e337e0ae47f18
  tests145 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests146
                   Main.tests41
                   Main.tests146
                   Main.tests40) -}
a18e3cb26fa8d722d73fef3aa293b6d0
  tests146 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 112) -}
a8966bd7aed0ef18ec1c115342ecefac
  tests147 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Fix Bad Branch {1 mark}"#) -}
bf84f5fb180e8a1eeec18373331849b2
  tests148 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests160
                   Main.tests149
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
6d4ccee914f356dd9e3eacc43d568395
  tests149 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (Lab04.State, GHC.Types.Bool)
                   Main.tests154
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)3
                   Main.$s$fShow(,)4
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests153
                   Main.tests150
                   eta2) -}
91d9b65bcff04541a51a0e76abeb3886
  tests15 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests16
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
b1ae655aa6aa3c46654bc2a2bd3633c3
  tests150 :: (Lab04.State, GHC.Types.Bool)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ (Lab04.State, GHC.Types.Bool)
                   Main.tests151
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <(Lab04.State, GHC.Types.Bool)>_R))) -}
3c0b9bc3a20fbd18b93bd2be1322163e
  tests151 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Lab04.State, GHC.Types.Bool) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests152
                        GHC.IO.IOMode.WriteMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case Lab04.execute1
                        GHC.IO.Handle.FD.stdin
                        ipv1
                        Main.tests32
                        Main.tests20
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests152
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    (ipv3, GHC.List.null @ GHC.Types.Char ipv9) #) } } } } } }) -}
c4ad97e832476a963fd5122bd4cfe62c
  tests152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/fix_good_empty.log"#) -}
b9dfef603041a276c69bfb96a56e02f4
  tests153 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- HasNoCafRefs, Unfolding: ((Main.tests20, GHC.Types.True)) -}
b560544a1eb4d26a29dee474578e04d4
  tests154 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests155) -}
af2f4fadefe31a7b29bc5dfef5bd5704
  tests155 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests156) -}
14f6027f62f3e64a2bfe4b1eb4da5dd6
  tests156 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests157
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
1288964d1cacbdc9f2c0b07bda2367e8
  tests157 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests158)) -}
36863f944c9aa49ce66191435aaff0bb
  tests158 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests159
                   Main.tests41
                   Main.tests159
                   Main.tests40) -}
8eef47e373dbcbf80fa4552433dcd2ff
  tests159 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 103) -}
9aa3a4958506d9abc999340c90c754e5
  tests16 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests47
                   Main.tests17
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
9f33d54de63d97ef16c7a0c6d9bf139e
  tests160 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Fix Good Empty {1 mark}"#) -}
46dd91ad07d98379c26da93145043b37
  tests161 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests174
                   Main.tests162
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
a9eadef6e70c201c676bd47860924cf7
  tests162 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   Main.tests168
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)3
                   Main.$s$fShow(,)4
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests167
                   Main.tests163
                   eta2) -}
0d55cb97982d1c2117edf4ba8ffb155c
  tests163 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                       GHC.Types.Float),
                      GHC.Types.Bool)
                   Main.tests164
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <((BinTree.BinTree GHC.Base.String GHC.Types.Float,
                                GHC.Types.Float),
                               GHC.Types.Bool)>_R))) -}
fa532cfcb38ee617b3ffb5af481cf8b1
  tests164 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
            GHC.Types.Float),
           GHC.Types.Bool) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests166
                        GHC.IO.IOMode.WriteMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case Lab04.execute1
                        GHC.IO.Handle.FD.stdin
                        ipv1
                        Main.tests32
                        Main.tests165
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests166
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    (ipv3, GHC.List.null @ GHC.Types.Char ipv9) #) } } } } } }) -}
a1698da43759e9cc32eef9798823459d
  tests165 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs,
     Unfolding: ((BinTree.Empty @ GHC.Base.String @ GHC.Types.Float,
                  Main.tests58)) -}
0873f93e0e432771ff8db3e04e60b12d
  tests166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/fix_bad_empty.log"#) -}
ddc46b5c787dda9aa80fbd46c01073e9
  tests167 ::
    ((BinTree.BinTree GHC.Base.String GHC.Types.Float,
      GHC.Types.Float),
     GHC.Types.Bool)
  {- HasNoCafRefs, Unfolding: ((Main.tests20, GHC.Types.False)) -}
30b710758384e0451d5b3d37af7669ff
  tests168 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests169) -}
3cbecf73db9624c43362fb414f70ed46
  tests169 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests170) -}
9fbad46fd703ab8169a0854d0a91c9af
  tests17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ [GHC.Base.String]
                   Main.tests35
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]2
                   GHC.Show.$fShow[]_$s$fShow[]2
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests24
                   Main.tests18
                   eta2) -}
87af4e6720b2832c0a958bf5f6df9b9e
  tests170 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests171
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
700857741ea0a1d9ffc8924f8ab5bc8e
  tests171 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests172)) -}
966781c602a13f99927c291794c12b62
  tests172 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests173
                   Main.tests41
                   Main.tests173
                   Main.tests40) -}
79f325846240b650d6a579b03a7b8529
  tests173 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 94) -}
8d6b2805c099f005732bb695c72431df
  tests174 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Fix Bad Empty {1 mark}"#) -}
1291c95880cbeed943545fd19249862e
  tests175 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests186
                   Main.tests176
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
6094ee5ef66e7293bf09ef7f954751bd
  tests176 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests180
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)
                   Main.$s$fShow(,)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests103
                   Main.tests177
                   eta2) -}
dcf4aa64d711779b64594a65bbfd8968
  tests177 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests178
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <(BinTree.BinTree GHC.Base.String GHC.Types.Float,
                               GHC.Types.Float)>_R))) -}
a457a722cae28c8004e681d5aeb457a8
  tests178 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (BinTree.BinTree GHC.Base.String GHC.Types.Float,
           GHC.Types.Float) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests179
                        GHC.IO.IOMode.ReadMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests87
                        GHC.IO.IOMode.AppendMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Lab04.execute1
                        ipv1
                        ipv3
                        Main.tests34
                        Main.tests20
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Lab04.execute1
                        ipv1
                        ipv3
                        Main.tests34
                        ipv5
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.hClose1 ipv3 ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10, ipv7 #) } } } } } } }) -}
ab0cf0700011849766c70c590aea54d5
  tests179 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/add_revise.txt"#) -}
76a592b0020225737bf054575b274693
  tests18 :: [GHC.Base.String]
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ [GHC.Base.String]
                   Main.tests19
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <[GHC.Base.String]>_R))) -}
77524cb1448a866d07c70b0413b0e986
  tests180 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests181) -}
7581a212fd81ddb001e8c4602f884170
  tests181 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests182) -}
072563efc02f44c5e61de64ca695a807
  tests182 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests183
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
de22e1a8174b90bfd11f7a638143d223
  tests183 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests184)) -}
919c6f3381af2c0c28fe616d7f6b7492
  tests184 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests185
                   Main.tests41
                   Main.tests185
                   Main.tests40) -}
fdff7dfce58e001fea2d2926db3833a5
  tests185 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 85) -}
3f7efe22392c9880aa1b9c9bb5d25c49
  tests186 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Revise Add {2 marks}"#) -}
51aa5e4729f39acc685b5427a71a7065
  tests187 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests199
                   Main.tests188
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
81ab634553ca41b8fc3178732f41f97b
  tests188 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests193
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)
                   Main.$s$fShow(,)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests192
                   Main.tests189
                   eta2) -}
85c9759b44b920141461591fac8a80bf
  tests189 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests190
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <(BinTree.BinTree GHC.Base.String GHC.Types.Float,
                               GHC.Types.Float)>_R))) -}
4606477ae1670966e901c22373627999
  tests19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests23
                        GHC.IO.IOMode.WriteMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case Lab04.execute1
                        GHC.IO.Handle.FD.stdin
                        ipv1
                        Main.tests22
                        Main.tests20
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests23
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    Data.OldList.sortBy
                      @ GHC.Base.String
                      GHC.Classes.$fOrd[]_$s$ccompare1
                      (Data.OldList.words ipv9) #) } } } } } }) -}
3326a550ec3ddf4a3ba5c943fa0189be
  tests190 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (BinTree.BinTree GHC.Base.String GHC.Types.Float,
           GHC.Types.Float) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests191
                        GHC.IO.IOMode.ReadMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests87
                        GHC.IO.IOMode.AppendMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Lab04.execute1
                        ipv1
                        ipv3
                        Main.tests34
                        Main.tests20
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.hClose1 ipv3 ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv5 #) } } } } } }) -}
99cd85a4e75a5becdf7bd3e16ca4d8eb
  tests191 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/empty_add.txt"#) -}
4ea5ac86216aed13afa1ddccc79bda26
  tests192 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests85, Main.tests86)) -}
c70ae8ecd321da7cf24978115fd5ffb5
  tests193 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests194) -}
6c474dafd3661121fad4c1ded0c3fbed
  tests194 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests195) -}
547563b50a011c3b190510938f410407
  tests195 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests196
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
637aa86561a732cf060d83f070d43409
  tests196 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests197)) -}
a0aad2e1d9d56502236543db2b2944e5
  tests197 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests198
                   Main.tests41
                   Main.tests198
                   Main.tests40) -}
38042109e2270fb6c7871032f597abf2
  tests198 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 74) -}
7233a03ac53657c9c6b1f722728823f3
  tests199 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Add to Empty {2 marks}"#) -}
612664785d8b31494ab1bbc63689843e
  tests2 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests218
                   Main.tests3) -}
7a2121fdc3022b070f3afe6519290aa0
  tests20 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs,
     Unfolding: ((BinTree.Empty @ GHC.Base.String @ GHC.Types.Float,
                  Main.tests21)) -}
0d8ee6c910d7d75bd6cd4091dd062151
  tests200 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Commands (16 marks)"#) -}
e4dcd6cd1332f687e0c0c1abea5b4e9b
  tests201 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests217
                   Main.tests202) -}
7ddb6ff59b3815c6863e5d33b32df4e8
  tests202 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests203
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
66abf81371dc33f7941cdee14efbdfc6
  tests203 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests216
                   Main.tests204
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
694df9fb7755ce17699ca324b7ebdd49
  tests204 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Types.Float
                   Main.tests208
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEqFloat
                   GHC.Float.$fShowFloat
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests207
                   Main.tests205
                   eta2) -}
2d73085c027f3446a487aa41bf7137fd
  tests205 :: GHC.Types.Float
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ GHC.Types.Float
                   Main.tests206
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <GHC.Types.Float>_R))) -}
50ec70d02a51720b4f2df23300d07042
  tests206 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Float #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 (# s', Main.tests207 #) }) -}
a95071af9f6df68006b973e40a174cae
  tests207 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 123.45) -}
038e5ebce02434642fa3738f290556af
  tests208 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests209) -}
04348922fa9472917ed281efcbf37a2a
  tests209 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests210) -}
c6ed7a13268a7c7e9d0d7aca4bb2f2f2
  tests21 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 0.0) -}
040d66da881181d8d78e3d435cdb122c
  tests210 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests211
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
63cc69132205ce38ae1357ad29dcf0a4
  tests211 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests212)) -}
e2544ba9695e9fb5dc441e531f295c2f
  tests212 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests215
                   Main.tests214
                   Main.tests215
                   Main.tests213) -}
bd492d2bb13663e4895cfa5756474b0c
  tests213 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49) -}
9ba6e8236aa41ea03888ddd02ea110f4
  tests214 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46) -}
4beddbd30cd8de50b58f961622b8785f
  tests215 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64) -}
a78f9412b904817a04a71a44a90f1d60
  tests216 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Final Result {1 mark}"#) -}
c383b990f4833b39e04949292741fa46
  tests217 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Exit Result (1 mark)"#) -}
660ee6b6e390eb872fe64312b43069f6
  tests218 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests251
                   Main.tests219) -}
31699f7fdf6c6b2505197d783913daea
  tests219 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests239
                   Main.tests220) -}
1613c7a401072653a00c205bc424b6a8
  tests22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "?"#) -}
ff405425cd5f5d7100a7d8cd5e1ee4ad
  tests220 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests221
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
de88b86f98545783dad27414e717f2bf
  tests221 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests238
                   Main.tests222
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
354b0b6aa9687b80ad42bc2959ae49ba
  tests222 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Types.Bool
                   Main.tests230
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.False
                   Main.tests223 `cast` (Data.Monoid.NTCo:Any[0])
                   eta2) -}
f988da50db99ec1d357d069a06885fde
  tests223 :: Data.Monoid.Any
  {- Unfolding: (Main.tests_go Main.tests224) -}
f3bfbea7fc9d2626f5a7241933aec806
  tests224 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests225) -}
f0e547bb279b07513996671c4c049208
  tests225 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.tests34
                   Main.tests226) -}
56a111da2dbff6e7b803cff996de6e0b
  tests226 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.tests32
                   Main.tests227) -}
468826f86b3d6c53784ee37e89051776
  tests227 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.tests30
                   Main.tests228) -}
3731c2e835dbdf5f9d9ba612700e3280
  tests228 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Main.tests229
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
7417aeeaef75880de221a2e3a9c7c3b5
  tests229 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "_zero"#) -}
3f2fefb8ffab480d8d41db1d52511b7f
  tests23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/help.log"#) -}
0cbf37185a91e0833b99ece5e499d52d
  tests230 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests231) -}
b6970e3da22d9d65b98ebfea5129e63d
  tests231 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests232) -}
dc6765582fc957e040a347cf6f3878a5
  tests232 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests233
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
91bb96f84e14f2db7b9ac237193a8d54
  tests233 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests234)) -}
ac664e1ac17be2c87c44bd022ed0d7d8
  tests234 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests237
                   Main.tests236
                   Main.tests237
                   Main.tests235) -}
5282ab9f9ac15ff732d61c8374d57aea
  tests235 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 66) -}
94ec14b82e03e0127d8f4a9d42d19cf8
  tests236 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 63) -}
765e044be43cb629e1c592a4983daadf
  tests237 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 61) -}
f18422ec668459ed755220dbd903f595
  tests238 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stay {1 mark}"#) -}
3f9759cc7d360e831e132de1650e2221
  tests239 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests250
                   Main.tests240
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
5fea32175eba351894d1416093f54eb1
  tests24 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests22
                   Main.tests25) -}
9f7b2f2afe0472be9bbcce112ce50500
  tests240 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Types.Bool
                   Main.tests242
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   Main.tests241
                   eta2) -}
d2d7da4e3d761aad5e3b85aa5bfa8679
  tests241 :: GHC.Types.Bool
  {- Unfolding: (GHC.Base.eqString Main.tests33 Lab04.done1) -}
01a841ef78edc16cd7752fa9606553d9
  tests242 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests243) -}
6c79d19e7a4301a10376183b8029384b
  tests243 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests244) -}
ada941c867e055d8a0fc82f58a28b826
  tests244 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests245
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
63c18f279906eb739421606d5e478c5c
  tests245 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests246)) -}
6455ea58f8324a662b2d7350b47d643d
  tests246 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests249
                   Main.tests248
                   Main.tests249
                   Main.tests247) -}
860fdc842105df60b8020fad31f1a9c3
  tests247 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 35) -}
2673a4e69f8528b581ea587b3b6afbe9
  tests248 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32) -}
d256c392fe918abd96967f8392c8abea
  tests249 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 60) -}
2d8e492a123c7cc5b4d7986da9219a56
  tests25 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests34
                   Main.tests26) -}
08434d697eb3616dcdd343e094ebddb0
  tests250 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Exit {1 mark}"#) -}
d1d55a21a92051932848a0fea2469e3e
  tests251 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Exiting (2 marks)"#) -}
b3b0c7b11e81d1d21818d7dcab164aa0
  tests252 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests271
                   Main.tests253) -}
422c1f8248bead1d9d55df625e4f0bd9
  tests253 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests254
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
318732c10924838e11b531810cb4c705
  tests254 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests270
                   Main.tests255
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
11327174fbbb3633ef7b533f90e87611
  tests255 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ [GHC.Types.Char]
                   Main.tests262
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests261
                   Main.tests256
                   eta2) -}
f2fae40bc35b70eaba8ae6709de371ac
  tests256 :: [GHC.Types.Char]
  {- Unfolding: (GHC.List.$wunsafeTake
                   @ GHC.Types.Char
                   6
                   Main.tests257) -}
94bb55555cd97c46f22da09181f8e5da
  tests257 :: [GHC.Types.Char]
  {- Unfolding: (GHC.List.dropWhile
                   @ GHC.Types.Char
                   Main.tests260
                   Main.tests258) -}
5ec81df8f92090d221dffb5f6bde2598
  tests258 :: GHC.Base.String
  {- Unfolding: (Main.tests259 (GHC.Types.[] @ GHC.Types.Char)) -}
250c73c7c474a6f16bb8764c7e1c7575
  tests259 :: GHC.Show.ShowS
  {- Unfolding: (GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble_$sshowFloat
                   GHC.Show.shows18
                   123.45) -}
5a885031be53cc7c80389bff32939361
  tests26 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests33
                   Main.tests27) -}
d43ad7f246957f25ac86b5819a2523ff
  tests260 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ x :: GHC.Types.Char ->
                 case x of wild { GHC.Types.C# c# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.leWord#
                           (GHC.Prim.int2Word# (GHC.Prim.-# (GHC.Prim.ord# c#) 48))
                           __word 9) of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
e1791cefd5ff32b94c1b7332095fa02b
  tests261 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "123.45"#) -}
76b5d1bcc7ef07bd5dd8164827a2fb6b
  tests262 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests263) -}
d3060ae2cfc4facc5ae52bcc11e3332a
  tests263 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests264) -}
26d4176f670df1fc3dba3d86cb5c74f3
  tests264 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests265
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
823be20d5d4462d310335cda8eeafeaa
  tests265 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests266)) -}
9ab8531823e8486372ec33d34d725e2d
  tests266 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests269
                   Main.tests268
                   Main.tests269
                   Main.tests267) -}
496f07bccb74b4d2c4b5726b7d3988df
  tests267 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 81) -}
c9115179aa2694744428761596acb6ce
  tests268 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 78) -}
b89ebfa0f916d6b436e253c1c22df2b8
  tests269 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 58) -}
508dd7f79ae805e83df6ad6584a4b222
  tests27 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests32
                   Main.tests28) -}
2142b3db502df45c0aedf8ff89666047
  tests270 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Prompt {1 mark}"#) -}
dbdd44ac8b2c0b8d530ae8591eef3851
  tests271 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Prompting (1 mark)"#) -}
e6a2676f0555edfae51e5a549590af86
  tests272 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests505
                   Main.tests273) -}
4628520c40caa64b199d6772eef3f846
  tests273 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests495
                   Main.tests274) -}
f83d8da022d46760ec89b14dc43ef095
  tests274 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests485
                   Main.tests275) -}
a34680addb67ab96eabcd39361cd3307
  tests275 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests474
                   Main.tests276) -}
ac28d643d06e35fbac84a31cef5e25e2
  tests276 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests464
                   Main.tests277) -}
936f5621a4cd6be89582c8c92ffde407
  tests277 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests452
                   Main.tests278) -}
1dee5fb666f6bd4361ca89371101fbb3
  tests278 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests441
                   Main.tests279) -}
c022a4943283840c53baf29e21f81d2a
  tests279 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests430
                   Main.tests280) -}
af86e42a58a25400b7028126f7a7137a
  tests28 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests31
                   Main.tests29) -}
f2faaa6b3765e76affade50b4ec7fe8c
  tests280 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests419
                   Main.tests281) -}
2a32e4ed596cbaa16aa4a3200321f416
  tests281 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests408
                   Main.tests282) -}
b9d691c48d77e65a8af5fd7b63193f99
  tests282 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests392
                   Main.tests283) -}
a0863ed2853880318ea06aa4eafc904f
  tests283 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests383
                   Main.tests284) -}
f4dd9f539f1f5bce67410e8af42f2077
  tests284 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests372
                   Main.tests285) -}
5cb3cbea85331443e3e6bce7cad2249b
  tests285 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests360
                   Main.tests286) -}
10243f25a3730d0530fb75f6dcb7c9f2
  tests286 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests346
                   Main.tests287) -}
ac399875ac3c0a673032efba0b11c8d2
  tests287 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests334
                   Main.tests288) -}
6b0f13eb3c814f64b5a7b6dbafa9dcfb
  tests288 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests321
                   Main.tests289) -}
d27695a93d29dc5f0235d2182bccfc2a
  tests289 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests306
                   Main.tests290) -}
d0393d4819c1e91fab6fcca2838e5af3
  tests29 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests30
                   (GHC.Types.[] @ GHC.Base.String)) -}
c13a1034c56693547b533917c2862564
  tests290 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests291
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
4f99ed073e3a458f57ccadff17bca054
  tests291 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests305
                   Main.tests292
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
64d1f3bc88854f1bc45d23eb9d00ac1a
  tests292 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests297
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests295
                   Main.tests293
                   eta2) -}
4d56b2e534582332b8a7b250f2870203
  tests293 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (BinTree.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests294
                   BinTree.ins4) -}
4aeddd10659f772f00e3e116c7327127
  tests294 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'c') -}
c872d2e330df58fc247f64774b73b33e
  tests295 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Int Main.tests296) -}
ae49feeaaed9176fd796a54bb36f8df0
  tests296 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 99) -}
e2f2a56517f995e53e68209feb1ae09a
  tests297 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests298) -}
6115cd6d56e796f8f48ecb471bc5c2b8
  tests298 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests299) -}
e0ad2214218a5cbc2a45f77eb77cbd7d
  tests299 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests300
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
373fe0c90818062b83d68a42cf6cd7cc
  tests3 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests201
                   Main.tests4) -}
19b9686689179e519526fa681e1fdeef
  tests30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "remove"#) -}
fa40cad64f12aed76816c37bc2eda3d0
  tests300 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests301)) -}
eab943224ab6b7328a00a593d967b698
  tests301 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests304
                   Main.tests303
                   Main.tests304
                   Main.tests302) -}
b5a4ac9a37ccb36c07c8df4e8e164b35
  tests302 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44) -}
577dd09aeca5f70b4afac8509d3adec1
  tests303 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41) -}
075aa6737681020cb29d19f6a662ab66
  tests304 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54) -}
1cb5ca9bf159038a1ffd6f781ca49c40
  tests305 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lookup Branch {R}"#) -}
617e6656bb1f019b64ae819f1418778a
  tests306 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests320
                   Main.tests307
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
7f09e5a4f61ac8b96eb8741cd25d4566
  tests307 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests312
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests310
                   Main.tests308
                   eta2) -}
025ad2141f05667d58796537bca7bb22
  tests308 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (BinTree.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests309
                   BinTree.leaf_b2) -}
efffbb54f0c5d4cb268ceca27768fde4
  tests309 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'b') -}
35d9de676335773f9ee6e3832add7238
  tests31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "list"#) -}
994f7de695985bf73ddeee7412c3b3c2
  tests310 :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Int Main.tests311) -}
9b8f46d5e36ba706ea0d26b35f8f2937
  tests311 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2) -}
982b52c376bba10e76fbf0753ef1813c
  tests312 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests313) -}
e0861c6347638255dd2fe88779afc800
  tests313 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests314) -}
cfa7aac7462373440443ca4e9cd5270a
  tests314 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests315
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
9e1e64a6e2d3d20c06b413387215dc22
  tests315 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests316)) -}
35d9f79013cc090ec7d02018706e0343
  tests316 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests319
                   Main.tests318
                   Main.tests319
                   Main.tests317) -}
72dbdf2d903f818013fe4c2fd7cef90d
  tests317 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48) -}
7597c6a69f20130f25e53882f0789d35
  tests318 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45) -}
18750c4d5fe9e4665e9498a965dbf4ca
  tests319 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53) -}
996cfb240d33c8f82a21ea00c2b8ef76
  tests32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fix"#) -}
d1612d56220d710161b5f7c817e7ab91
  tests320 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Leaf (Ok) {R}"#) -}
9c52288d7138f2dc5a245eef97a505d5
  tests321 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests333
                   Main.tests322
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
b41234367017ae8b85db3df41008c53d
  tests322 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests325
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Main.tests323
                   eta2) -}
0e7df7e747e9a7e96d8c8d9d4974d715
  tests323 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (BinTree.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests324
                   BinTree.leaf_b2) -}
20ce1eff32ac93eab53e984caa055d01
  tests324 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'a') -}
b06bfb2d3faa35c766169ca365334c8c
  tests325 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests326) -}
96f0580dc526d17972be27da536f1b0a
  tests326 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests327) -}
2894ad22ea5c372c29e294be4ea525cf
  tests327 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests328
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
5a6c245a702137a2d593a5319de0fdee
  tests328 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests329)) -}
2e0fb3c4569b91b52a3d65061fd791ca
  tests329 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests332
                   Main.tests331
                   Main.tests332
                   Main.tests330) -}
463e6408e386032aa951349710150abb
  tests33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "exit"#) -}
3ca43a7ac29ed727adb7396c7c38303b
  tests330 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 50) -}
5c6b7b92184169e3c15bd5b976dcd5c6
  tests331 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 47) -}
0250f80d365c25d4e1c4bbf99c0e5997
  tests332 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 52) -}
09e490fc1817609511316c117295ced8
  tests333 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Lookup Leaf (Fail) {R}"#) -}
418d81f163231577e9ac8fc9cb1cf9cd
  tests334 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests345
                   Main.tests335
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
d437311d664c0a01196a48d5d4f9deac
  tests335 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   Main.tests337
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqMaybe
                   Main.$s$fShowMaybe
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Main.tests336
                   eta2) -}
c08be9a5398fda861a50fc091337a567
  tests336 :: GHC.Base.Maybe GHC.Types.Int
  {- Unfolding: (BinTree.treeLookup
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Classes.$fOrdChar
                   Main.tests324
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
d003bd0a44e5014239bdb3abe2224ea5
  tests337 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests338) -}
cf95eded75de754a020075c7f09e8ca0
  tests338 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests339) -}
812f10eab1b49f6e541c431b94e6c2af
  tests339 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests340
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
1729c88e4a6939347a1cbf43de3a14b6
  tests34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "add"#) -}
3f59be7f8a9f7e9e76c1d09503fa6603
  tests340 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests341)) -}
85acad0c84ba94787cb7a1920a2f2cdc
  tests341 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests344
                   Main.tests343
                   Main.tests344
                   Main.tests342) -}
3ba2b63a448d8b4335b32f487f8bec5e
  tests342 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42) -}
a15580ce647846357a5629b9952cbf80
  tests343 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39) -}
d9e2ad2bcf45861292a9dd4ce969f022
  tests344 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51) -}
e84f3209869797f002a621e3036e4883
  tests345 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lookup Empty {R}"#) -}
63492a7ca674e7a1db3d5331b60255a8
  tests346 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests359
                   Main.tests347
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
1261ee460b8df3d9a05f1c0d326089d9
  tests347 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests353
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests348
                   BinTree.ins4
                   eta2) -}
9fd33729d126cce3bea6e311cb8f2cc2
  tests348 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests351
                   Main.tests350
                   Main.tests349
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
faf481dec1e6686ca671b9baa21c993b
  tests349 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4) -}
da8be571a61ca3339b4561d51f4cea90
  tests35 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests36) -}
7ddc740a7c532386daa90a5a20f50198
  tests350 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd') -}
3f1f8e32ce534aa591877373f59aa44e
  tests351 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)
                   Main.tests309
                   Main.tests311
                   Main.tests352) -}
909f6289bbb0d67aba02314b01d6c012
  tests352 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Leaf
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests294
                   Main.tests296) -}
5926128217848a89a4647b7272751be6
  tests353 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests354) -}
30b3b0e6bba870b7839b959f74a735d2
  tests354 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests355) -}
1d53c165627e71b549ef09f391b23710
  tests355 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests356
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
766edf3aaeba273f6066a5937539f7e2
  tests356 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests357)) -}
d54694414d23d2c2d02d964416ea4a90
  tests357 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests213
                   Main.tests358
                   Main.tests213
                   Main.tests248) -}
f8d1aac16d2e46601933ea09d46a8e80
  tests358 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29) -}
7264f1d0906747e3bc3541de8ed569d2
  tests359 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Branch (Old) {R}"#) -}
e6c548f1fd37adfa4b64aed4f68bea43
  tests36 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests37) -}
6361fa2d97d6934af675b431d2064101
  tests360 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests371
                   Main.tests361
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
7841215c3abacaa1b739f65930d184a9
  tests361 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests366
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests362
                   BinTree.ins3
                   eta2) -}
bc63796023721ef170c61d9d8eb5bc61
  tests362 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests363
                   Main.tests350
                   Main.tests349
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
c859e6c65ea51ef9a5807fac33f89dd9
  tests363 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)
                   Main.tests309
                   Main.tests311
                   Main.tests364) -}
25ec984a732f6843923e581c31874fca
  tests364 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Leaf
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests294
                   Main.tests365) -}
61bd71bdcbdc322023a4d83f822c85cb
  tests365 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3) -}
847874e83bfa92defe91bbddb0ba7885
  tests366 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests367) -}
5663adc4b1b9ae56f4b4bebf81205742
  tests367 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests368) -}
820b188bf74bd6220c2a2d2929b92391
  tests368 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests369
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
85ec00fef6ec703d2b422f74fd57448e
  tests369 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests370)) -}
64e1fd7a8002dbd25133d5be9cc0c410
  tests37 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests38
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
aed70104a7f066fd44befd6a097eb45f
  tests370 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests317
                   Main.tests358
                   Main.tests317
                   Main.tests248) -}
2f1b0ea8d13ea326b35e0e2679c444c8
  tests371 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Insert Branch (New) {R}"#) -}
c3009380285bfe678381fa781ee401e5
  tests372 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests382
                   Main.tests373
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
af9ea37e0c02a9c77f951138b1f15db4
  tests373 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests375
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests374
                   BinTree.ins2
                   eta2) -}
c53dee28b1b4c8deddf93fbe92750bf7
  tests374 :: BinTree.BinTree GHC.Types.Char GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (BinTree.Branch
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   Main.tests364
                   Main.tests350
                   Main.tests349
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
a273b330f822c2db1ac275bbc29f57ab
  tests375 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests376) -}
289fe089f5e4d8d8fc4cf8c5cf42618c
  tests376 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests377) -}
4c7428869a5751d17fa7ab2e81d9b5b4
  tests377 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests378
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c4f80e143765e02242d7f279ee915209
  tests378 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests379)) -}
d160bd740f02644103af731b7baa3e35
  tests379 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests331
                   Main.tests381
                   Main.tests331
                   Main.tests380) -}
59c7c388cac8286cfb71d4ecf9814703
  tests38 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests39)) -}
17a3ccd92affed98b3bde03306cae9dd
  tests380 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30) -}
584446b7897e36cd5668d5dd64af7330
  tests381 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27) -}
748204864440e94d73d798ccfe36624d
  tests382 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Insert Leaf {R}"#) -}
83656446fb6e46100e3969c6add6dcb6
  tests383 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests391
                   Main.tests384
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
1adaf0e3f0f86097d60325466d9e1cf4
  tests384 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Char GHC.Types.Int)
                   Main.tests385
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree4
                   Main.$s$fShowBinTree6
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests364
                   BinTree.ins1
                   eta2) -}
dde2e0e5b13384bf9a5247147455170f
  tests385 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests386) -}
9ece80ab6e6f41085261bd62bedcc241
  tests386 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests387) -}
311aa9d9d58d70f158cc4fc2357a84ad
  tests387 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests388
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
57a2badda04d5c6f4aa20079dbbc595c
  tests388 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests389)) -}
2e47a147eba22db1cbbf8f7a3f53362c
  tests389 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests214
                   Main.tests390
                   Main.tests214
                   Main.tests358) -}
3c328240db1d73d0371cdf93e4387eeb
  tests39 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests42
                   Main.tests41
                   Main.tests42
                   Main.tests40) -}
19b0d86327433a063b50f97fa4e88e7d
  tests390 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26) -}
b69ae133036253b4f20af44288c9a0f7
  tests391 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Insert Empty {R}"#) -}
25b7638f67358d164d4448954f4bf364
  tests392 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests407
                   Main.tests393
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
031b1fb4e57a4ae5f713a73e3a205f46
  tests393 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Int [GHC.Types.Int])
                   Main.tests399
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree
                   Main.$s$fShowBinTree
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests398
                   Main.tests394
                   eta2) -}
c489ecc46bb99cb4d14e34bb2adca02c
  tests394 :: BinTree.BinTree GHC.Types.Int [GHC.Types.Int]
  {- Unfolding: (BinTree.treeMap
                   @ ()
                   @ GHC.Types.Int
                   @ ()
                   @ [GHC.Types.Int]
                   Main.tests396
                   Main.tests395
                   BinTree.emptyX4) -}
a2db686de1226287058ca7224b708969
  tests395 :: () -> [GHC.Types.Int]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ ds :: () -> GHC.Types.[] @ GHC.Types.Int) -}
89a8244747817f660796a43dec9b5509
  tests396 :: () -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ ds :: () -> Main.tests397) -}
4fad1c81679ebc148ba6bc2cf9cb8bcb
  tests397 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
2edb08f320ed470f914a40a2e9358c9f
  tests398 :: BinTree.BinTree GHC.Types.Int [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (BinTree.Branch
                   @ GHC.Types.Int
                   @ [GHC.Types.Int]
                   (Main.tests_nullX2 @ GHC.Types.Int)
                   Main.tests397
                   (GHC.Types.[] @ GHC.Types.Int)
                   (Main.tests_nullX2 @ GHC.Types.Int)) -}
42627f3c469d8a5859054eb1c97c7351
  tests399 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests400) -}
0e8dd033200626c95e54fd45b1a60c18
  tests4 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests5
                   (GHC.Types.[] @ Test.Framework.Core.Test)) -}
79777c794ad5e1ca20290bea0b14935f
  tests40 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
d3e94cd0c5fd690ab947f2d2d81f5ccf
  tests400 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests401) -}
b21361c46a86b5ca50394441f8b63cc9
  tests401 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests402
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
db54665d21e6e0afba4d71e092e8462b
  tests402 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests403)) -}
a3c09f44774f5e2674a9e0116c7fc0ef
  tests403 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests406
                   Main.tests405
                   Main.tests406
                   Main.tests404) -}
aea8605d75b8c512d4d66d33f191f450
  tests404 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8) -}
2a2b51530f423b4358fc31c02683f8fd
  tests405 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5) -}
a7bcc7470f5555b29056bc4cf7ef1875
  tests406 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40) -}
13fa9636fdc0bad3dcf069d3218bf008
  tests407 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Map Branch {R}"#) -}
a9339a19d7e111e2e096e826c4254e73
  tests408 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests418
                   Main.tests409
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
52b802e16eff4300db91a4121ad9a4ce
  tests409 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Int GHC.Types.Char)
                   Main.tests411
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree2
                   Main.$s$fShowBinTree3
                   (GHC.Types.[] @ GHC.Types.Char)
                   BinTree.leaf_2b
                   Main.tests410
                   eta2) -}
018cc7caae3bbe119583b777709f11b1
  tests41 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7) -}
ff5f94d0cb80560a83136e849186cf45
  tests410 :: BinTree.BinTree GHC.Types.Int GHC.Types.Char
  {- Unfolding: (BinTree.treeMap
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   BinTree.alphaOrd
                   BinTree.alphaChr
                   BinTree.leaf_b2) -}
c6a3bc2a3f2d443a5aa8b2d84855545f
  tests411 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests412) -}
da49eda0db862a914d40292c5a84287b
  tests412 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests413) -}
93ab2475e77a1d3dfd94331fdbad86c7
  tests413 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests414
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
42afb5fd9da62a62ae256993e17e97e9
  tests414 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests415)) -}
f1b942c7bfb7c31c1b5fbf4890a5c15a
  tests415 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests417
                   Main.tests319
                   Main.tests417
                   Main.tests416) -}
c7ea9d8629f387daf4ac171394b4e6c2
  tests416 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56) -}
515b134baea1b0d0caf8f28de682b209
  tests417 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37) -}
14073b05eb23d82fb3e9b9c83873cd41
  tests418 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Map Leaf {R}"#) -}
dd11fb0f85cf87c629790007f55aaced
  tests419 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests429
                   Main.tests420
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
3cb3f2dbf29ee468b1ce1f404cbda719
  tests42 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 167) -}
0341ffcb45954d8366c94073838ed0af
  tests420 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Types.Int GHC.Types.Char)
                   Main.tests422
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEqBinTree2
                   Main.$s$fShowBinTree3
                   (GHC.Types.[] @ GHC.Types.Char)
                   (BinTree.Empty @ GHC.Types.Int @ GHC.Types.Char)
                   Main.tests421
                   eta2) -}
daeb374e9e2d00697a4efe10d3270a30
  tests421 :: BinTree.BinTree GHC.Types.Int GHC.Types.Char
  {- Unfolding: (BinTree.treeMap
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   GHC.Base.ord
                   GHC.Char.chr
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
6a2f53776555cfc3f1027936c291d502
  tests422 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests423) -}
b0749d2321f60cfdb0b7065697d49846
  tests423 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests424) -}
ebc5961ce558022eb5a32bc30a9ce8f9
  tests424 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests425
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
25e1d0d8dac13f708e34214d9dc8dce7
  tests425 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests426)) -}
a96545220a8f09086817e5fcc7d22d16
  tests426 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests428
                   Main.tests406
                   Main.tests428
                   Main.tests427) -}
607bf5a48338bd2733f23e092225fac8
  tests427 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 43) -}
b3b93d5a6d667c947fd64fbef20d2298
  tests428 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36) -}
096fd9ba9ebb982c4b1507e953f06c3e
  tests429 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Map Empty {R}"#) -}
9ac73bf1b92f50e8cfe0477fdd923ba6
  tests43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Main.hs"#) -}
b0a08958a6ba297d9b56f9c5cc4edebe
  tests430 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests440
                   Main.tests431
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
9044c50e308c1c4b9fbcaed2227ba9c8
  tests431 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests434
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests433
                   Main.tests432
                   eta2) -}
4aaf6fb1e4092fe09eafcd462e14d6e0
  tests432 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ ()
                   @ ()
                   GHC.Show.$fShow()
                   GHC.Show.$fShow()
                   GHC.Types.False
                   BinTree.emptyX4) -}
6c903d7119a86bc150734cdee204fed9
  tests433 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch (Branch Empty () () Empty) () () (Branch Empty () () Empty)"#) -}
ab42d36b7aea1bd3de326af4cb505be8
  tests434 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests435) -}
e58ce0e447a6a8a1a7fadcd7aa109fab
  tests435 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests436) -}
7397125e292d0c8bbadea3133808a266
  tests436 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests437
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
5692b31dc9f2e2b0dab93047d1501b07
  tests437 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests438)) -}
6c4606e0eb6b6cf59c20a1f5dad23cf4
  tests438 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests439
                   Main.tests349
                   Main.tests439
                   Main.tests41) -}
2c45dc793a5ce02f3782006f43a936bd
  tests439 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33) -}
f2808779fa0c36261af21481684ce615
  tests44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
7c88d45097f2989b8847bd83a686193f
  tests440 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Show Empty X 4 {R}"#) -}
658b92b3bec7ad2c4cf84cf9e1e7bc9a
  tests441 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests451
                   Main.tests442
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
b46e79fbc34b8fed68d07d27d7682856
  tests442 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests445
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests444
                   Main.tests443
                   eta2) -}
7230add232f0ab59a69613a954b23d39
  tests443 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   GHC.Types.False
                   BinTree.br_right_a1_b2) -}
d4030728dfa4458d7d33860db02fbec0
  tests444 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch Empty 'a' 1 (Leaf 'b' 2)"#) -}
74d7921301c527cc97ee03aec1c96742
  tests445 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests446) -}
7b01ebaf4f320c2b39216dbf8df51cbe
  tests446 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests447) -}
3f74c03e9d1f71ec07c969d3602d6eb7
  tests447 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests448
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
040945b2563d5262933b44519027d1d4
  tests448 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests449)) -}
055e80f15b01a7f652dfc5741c8e768b
  tests449 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests380
                   Main.tests450
                   Main.tests380
                   Main.tests381) -}
8d052693338c959d2ab29d9a4e058236
  tests45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
26496a469d382a3912597be8e52f991f
  tests450 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24) -}
cc7af7c7588aafd174d9758801d3ca78
  tests451 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Br Right a 1 b 2 {R}"#) -}
53293ec56cf9cec710206da69bf2283e
  tests452 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests463
                   Main.tests453
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
15980c44f390c4b4a3d728313ce5f90b
  tests453 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests456
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests455
                   Main.tests454
                   eta2) -}
f11cd014248e3e89728dff965e10be3f
  tests454 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   GHC.Types.False
                   BinTree.br_left_a1_b2) -}
97f2feb5f1d4a2d1bf69722e2dbc1b5a
  tests455 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch (Leaf 'a' 1) 'b' 2 Empty"#) -}
124571ee0874ce0931c9675f294dae45
  tests456 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests457) -}
00f4d9c9181f3ddc0710ab78273ffd87
  tests457 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests458) -}
b06bfc36f9710a49362595950b63090a
  tests458 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests459
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
5e2530c9871bd97cca35f8ebbfbbfaac
  tests459 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests460)) -}
bf2999b2aea9f6d292f68e38966319b4
  tests46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "@?="#) -}
b94010f0a3dc25b28a3480adba2ee8ff
  tests460 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests462
                   Main.tests461
                   Main.tests462
                   Main.tests390) -}
a4b8317bcac49a49f6f704f0b4a0e742
  tests461 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23) -}
3bcc2111f26f7ae5d9631fd0040a6c43
  tests462 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28) -}
b8dc81f84056dcb97a96c9cba429807a
  tests463 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Br Left a 1 b 2 {R}"#) -}
aada5c9685c0b53f7fd644586b0971d3
  tests464 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests473
                   Main.tests465
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
64bef9118a865bf01ec6f94ee796b9da
  tests465 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests468
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests467
                   Main.tests466
                   eta2) -}
f455279e29fef446ffccc78517c9b436
  tests466 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   GHC.Types.False
                   BinTree.br_emp_a1) -}
23c71f84e4e00476db8f7609414bc766
  tests467 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Branch Empty 'a' 1 Empty"#) -}
0e7413fedddc47fe9c6551953de20c0a
  tests468 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests469) -}
3be55360e92152979fb7ad3ec11f5943
  tests469 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests470) -}
b7a83d83a7778b04cd34bd899476a7fe
  tests47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Help Listing {2 marks}"#) -}
59d36cab687cae166e6d6fb6cc79cfab
  tests470 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests471
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
9cd171e4d8d9236e91e09ce840fbb64b
  tests471 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests472)) -}
0754e6602c9cbc3a4f9a565eda6b968b
  tests472 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests390
                   Main.tests406
                   Main.tests390
                   Main.tests427) -}
73c723323e3869b138ba758490b980bb
  tests473 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Show Br Empty a 1 {R}"#) -}
9cecc49c2fc36e9b9c31d5745d3d7715
  tests474 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests484
                   Main.tests475
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
33b63762f16c8e3131397c0b9991ac93
  tests475 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests478
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests477
                   Main.tests476
                   eta2) -}
15fbd0308db5e7c323607e91fa614de5
  tests476 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowChar
                   GHC.Types.False
                   BinTree.leaf_1a) -}
c63c2b8ee668f5dc68f2beb7f28b5efd
  tests477 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Leaf 1 'a'"#) -}
eb933725ef0ef6536ec5e83de4e60e6a
  tests478 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests479) -}
72a3d101ac5def4bfbc7a9edff66adc5
  tests479 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests480) -}
8aefd1df2bfec6efd76320385ad1f124
  tests48 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests77
                   Main.tests49
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
d5ac37c4eaa5c012891b661de6435bf2
  tests480 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests481
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
a33444a4445f63e3932802712de3ca32
  tests481 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests482)) -}
6fc320c5507139a91d4f8e253060974f
  tests482 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests483
                   Main.tests428
                   Main.tests483
                   Main.tests343) -}
d85953b5544f2744c71c33f1747eb756
  tests483 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25) -}
751d7c2723db52206a063581ff1afb43
  tests484 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Show Leaf 1 a {R}"#) -}
74b7da4eb7333608093da58b840ea0ba
  tests485 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests494
                   Main.tests486
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
69d36400414ec4c69c4cbd7c30b81f86
  tests486 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests489
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests488
                   Main.tests487
                   eta2) -}
65c9b2c758abd6b97d674762c66991cc
  tests487 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   GHC.Types.False
                   BinTree.leaf_a1) -}
a9dae7892a8c507b096ce5a2b67b167c
  tests488 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Leaf 'a' 1"#) -}
2d7d7efa3e5e03e231999ef97eddbc7f
  tests489 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests490) -}
a12e4d433a85b900ad10c073000d6473
  tests49 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ [GHC.Base.String]
                   Main.tests71
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]2
                   GHC.Show.$fShow[]_$s$fShow[]2
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests64
                   Main.tests50
                   eta2) -}
78b41bdcb380f7aec8aa80f3c9ee4842
  tests490 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests491) -}
0bf75c2299a4d376f4dd94dec9152447
  tests491 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests492
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
880a19a682bcace8dddfdf33b6e0042e
  tests492 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests493)) -}
18c6d4b4c2b0a7c28f292e2b455a37d2
  tests493 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests450
                   Main.tests428
                   Main.tests450
                   Main.tests343) -}
b6c4bde3bdde8817865b9ca0f60fd3c7
  tests494 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Show Leaf a 1 {R}"#) -}
10800a85b71415aa2421df18622a83af
  tests495 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests504
                   Main.tests496
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
d6eef5632d4fb39497e3d8e9eb0b67f7
  tests496 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ GHC.Base.String
                   Main.tests499
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   GHC.Show.$fShow[]_$s$fShow[]1
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests498
                   Main.tests497
                   eta2) -}
dbe8985501dc0fd2b2bcea74721d7cc8
  tests497 :: GHC.Base.String
  {- Unfolding: (BinTree.treeShow
                   @ GHC.Types.Char
                   @ GHC.Types.Int
                   GHC.Show.$fShowChar
                   GHC.Show.$fShowInt
                   GHC.Types.False
                   (BinTree.Empty @ GHC.Types.Char @ GHC.Types.Int)) -}
77125f42d57f2a45fb0a7474389aacf4
  tests498 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Empty"#) -}
52a3ea869c19157aadc3de74ffa6bde8
  tests499 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests500) -}
0b56eeb0e674858ed2941672dd945b48
  tests5 :: Test.Framework.Core.Test
  {- Strictness: m2,
     Unfolding: (Test.Framework.Core.TestGroup
                   Main.tests200
                   Main.tests6) -}
2fac61219d2e215c2347dffd22a605ef
  tests50 :: [GHC.Base.String]
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ [GHC.Base.String]
                   Main.tests51
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <[GHC.Base.String]>_R))) -}
8c6ea23a0df5f6f5744ba4f9f5524dc8
  tests500 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests501) -}
c95c32c03eb6838977e25b527078808f
  tests501 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests502
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
04fe3150bcd5a0198d5086f32b294511
  tests502 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests503)) -}
2f04cb6590b3ddc01877455cccf27bb0
  tests503 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests461
                   Main.tests439
                   Main.tests461
                   Main.tests428) -}
4b5f1b18ce22e4b722591f514f44b2cf
  tests504 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Show Empty {R}"#) -}
337c6e43008b5e4ff1be3f5a319d0233
  tests505 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \REGRESSION TESTS (not marked)"#) -}
deb1668c5da70ca2f855f814b8a85243
  tests51 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests63
                        GHC.IO.IOMode.WriteMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case Lab04.execute1
                        GHC.IO.Handle.FD.stdin
                        ipv1
                        Main.tests31
                        Main.tests52
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests63
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, Data.OldList.lines ipv9 #) } } } } } }) -}
4774905d19239a62df26edc919e0c058
  tests52 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests54, Main.tests53)) -}
062ca8afca16da9566cf92ca5280611f
  tests53 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 15001.0) -}
103b858be8c0993c35921586d5185d77
  tests54 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Branch
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests60
                   Main.tests59
                   Main.tests58
                   Main.tests55) -}
e09fd7f5bca04638bf1ff61d8a1a1266
  tests55 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Leaf
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests57
                   Main.tests56) -}
97a768a2171346eae32cf7d1e7e21e03
  tests56 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 15000.0) -}
f1f43dc5cd345c48a51cedfefb48bfa1
  tests57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "home"#) -}
460bc239441c5efcb13f32f620318f8d
  tests58 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 1000.0) -}
2e7a0a6edd89c1a3f6669eff8e3aed07
  tests59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gold"#) -}
b6c543dbf4c246d2fbae863b984f7549
  tests6 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests187
                   Main.tests7) -}
117f42ed50e6854e62a309ea5f51a09d
  tests60 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Leaf
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests62
                   Main.tests61) -}
93639327cf56472440946d997b938a7f
  tests61 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 1.0) -}
5f7acef03839abc0db707f392106e119
  tests62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "banana"#) -}
2da18897b5a8bd100fcd56b225abfc28
  tests63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/list_ghb.log"#) -}
497306def5a3f43ec95fb6b02f887365
  tests64 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests70
                   Main.tests65) -}
d9def51e694ce48173a6600c84b7e4f4
  tests65 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests69
                   Main.tests66) -}
425b1f9e2b2a46cb8aeb5e40b074e54f
  tests66 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tests68
                   Main.tests67) -}
229a3fcbf93df006a6b1ac8f809e6317
  tests67 :: [GHC.Base.String]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Base.String)) -}
ff977b7d18cc3459e3bddaf689f5b203
  tests68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "home 15000.0"#) -}
fc44c041e50df75bdba204911d178ce9
  tests69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gold 1000.0"#) -}
fdbed5ff3f346a69b7752f23f9d33e3d
  tests7 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests175
                   Main.tests8) -}
b3e6dcadd652847d6f3a4a0ba949de2f
  tests70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "banana 1.0"#) -}
d84a678b5109578a362b6d12c562914b
  tests71 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests72) -}
6cf37d6f01630a4dfe013c485fb33f7c
  tests72 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests73) -}
5305b44385a7bab6d4c22a9fde111fc9
  tests73 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests74
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
5e029c2ccad1d99a2fa436363f3ead3e
  tests74 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests75)) -}
b1d65ea0d209ecea71d4b8ed3ae7100e
  tests75 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests76
                   Main.tests41
                   Main.tests76
                   Main.tests40) -}
d85ac226b1efad863497930217881101
  tests76 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 158) -}
173b186e596881e8e8781db96a09b6fd
  tests77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "List (b,g,h) {2 marks}"#) -}
18afefe688c48b2b6816379a1788ace1
  tests78 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests98
                   Main.tests79
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
348b9cd2ee4963460e31e1d824631eac
  tests79 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 Test.HUnit.Base.@=?7
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests92
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Main.$s$fEq(,)
                   Main.$s$fShow(,)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.tests89
                   Main.tests80
                   eta2) -}
d47fb45d89d9073ac6c28d431ad8980d
  tests8 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests161
                   Main.tests9) -}
7d1a2f64811e93ff9e92b8a1bc022e6e
  tests80 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (GHC.IO.unsafeDupablePerformIO
                   @ (BinTree.BinTree GHC.Base.String GHC.Types.Float,
                      GHC.Types.Float)
                   Main.tests81
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <(BinTree.BinTree GHC.Base.String GHC.Types.Float,
                               GHC.Types.Float)>_R))) -}
f7ec3becc22a2b814c74b3f7c14321c5
  tests81 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (BinTree.BinTree GHC.Base.String GHC.Types.Float,
           GHC.Types.Float) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests88
                        GHC.IO.IOMode.ReadMode
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.tests87
                        GHC.IO.IOMode.AppendMode
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Lab04.execute1
                        ipv1
                        ipv3
                        Main.tests30
                        Main.tests82
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.hClose1 ipv3 ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv5 #) } } } } } }) -}
0920e241816cbd3bfa3c97edba1a549a
  tests82 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests84, Main.tests83)) -}
7ec8807ec50281d29d2acf7d71318f64
  tests83 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 101.0) -}
df3de9832ba81c1ced2fe4c4eede8fd5
  tests84 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Branch
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   (BinTree.Empty @ GHC.Base.String @ GHC.Types.Float)
                   Main.tests62
                   Main.tests61
                   Main.tests85) -}
97f67e443e50c1473abd339163c8e8b7
  tests85 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Leaf
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests59
                   Main.tests86) -}
64be7889150be6bd79c8991b43424886
  tests86 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# __float 100.0) -}
0372c5aa9a38614794612bc05ea4617e
  tests87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/tests.log"#) -}
1b11e29f4bf28650663897e742f4cef4
  tests88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "test/remove_gold.txt"#) -}
6fa32a00ed3dea65cca1feef620019d6
  tests89 ::
    (BinTree.BinTree GHC.Base.String GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: ((Main.tests90, Main.tests61)) -}
da7ba18a5a5b7b8d90393bfe27a23229
  tests9 :: [Test.Framework.Core.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Framework.Core.Test
                   Main.tests148
                   Main.tests10) -}
c733d700c2f7aaa83a71871cb11cbb88
  tests90 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Branch
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   (BinTree.Empty @ GHC.Base.String @ GHC.Types.Float)
                   Main.tests62
                   Main.tests61
                   Main.tests91) -}
6e904870f3dc85636558bfdd0d553ab1
  tests91 :: BinTree.BinTree GHC.Base.String GHC.Types.Float
  {- Unfolding: (BinTree.Leaf
                   @ GHC.Base.String
                   @ GHC.Types.Float
                   Main.tests59
                   Main.tests21) -}
61d97aa2750fe9b792d5d45bbe2ebfc6
  tests92 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.tests93) -}
5e748d3cba0a25a4819b6e042448a130
  tests93 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.HUnit.Base.@?=2
                   Main.tests94) -}
3db1a225f083011d0072bddb9a70cb1f
  tests94 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.tests95
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
14c4ec3a256f8a6c311cebd5e73f3a76
  tests95 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.tests46, Main.tests96)) -}
55c82cc61d9c17eadfd42376f79a779d
  tests96 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.tests45
                   Main.tests44
                   Main.tests43
                   Main.tests97
                   Main.tests41
                   Main.tests97
                   Main.tests40) -}
e2fa61d691142b9dc66decb9fcd9db3d
  tests97 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 145) -}
498ce00ca2b79b35ea94361a1d57ac17
  tests98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Remove Branch {2 marks}"#) -}
3f509881a4fdc812a2967a42768d3f09
  tests99 :: Test.Framework.Core.Test
  {- Unfolding: (Test.Framework.Core.Test
                   @ Test.Framework.Providers.HUnit.TestCaseRunning
                   @ Test.Framework.Providers.HUnit.TestCaseResult
                   @ Test.Framework.Providers.HUnit.TestCase
                   Test.Framework.Providers.HUnit.$fTestlikeTestCaseRunningTestCaseResultTestCase
                   Test.Framework.Providers.HUnit.testCase1
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <Test.Framework.Providers.HUnit.TestCase>_N))
                   Main.tests112
                   Main.tests100
                     `cast`
                   (Trans
                        (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        (Sym (Test.Framework.Providers.HUnit.NTCo:TestCase[0])))) -}
bfc4f8a45e74c2f497f6f2e5cc4ff256
  tests_go :: [[GHC.Types.Char]] -> Data.Monoid.Any
  {- Arity: 1, Strictness: <S,1*U> -}
0f83ec45485323d7b72d20a02e2f7df8
  tests_nullX2 :: BinTree.BinTree GHC.Types.Int [t]
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (\ @ t ->
                 BinTree.Branch
                   @ GHC.Types.Int
                   @ [t]
                   (BinTree.Empty @ GHC.Types.Int @ [t])
                   Main.tests397
                   (GHC.Types.[] @ t)
                   (BinTree.Empty @ GHC.Types.Int @ [t])) -}
"SPEC/Main $fEq(,) @ (BinTree String Float) @ Float" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                               (BinTree.BinTree
                                                                                  GHC.Base.String
                                                                                  GHC.Types.Float)
                                                                     $dEq1 :: GHC.Classes.Eq
                                                                                GHC.Types.Float
  GHC.Classes.$fEq(,) @ (BinTree.BinTree
                           GHC.Base.String GHC.Types.Float)
                      @ GHC.Types.Float
                      $dEq
                      $dEq1
  = Main.$s$fEq(,)
"SPEC/Main $fEq(,) @ (BinTree String Float, Float) @ Bool" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                                     (BinTree.BinTree
                                                                                        GHC.Base.String
                                                                                        GHC.Types.Float,
                                                                                      GHC.Types.Float)
                                                                           $dEq1 :: GHC.Classes.Eq
                                                                                      GHC.Types.Bool
  GHC.Classes.$fEq(,) @ (BinTree.BinTree
                           GHC.Base.String GHC.Types.Float,
                         GHC.Types.Float)
                      @ GHC.Types.Bool
                      $dEq
                      $dEq1
  = Main.$s$fEq(,)3
"SPEC/Main $fEqBinTree @ Char @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                               GHC.Types.Char
                                                     $dEq1 :: GHC.Classes.Eq GHC.Types.Int
  BinTree.$fEqBinTree @ GHC.Types.Char @ GHC.Types.Int $dEq $dEq1
  = Main.$s$fEqBinTree4
"SPEC/Main $fEqBinTree @ Int @ Char" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                               GHC.Types.Int
                                                     $dEq1 :: GHC.Classes.Eq GHC.Types.Char
  BinTree.$fEqBinTree @ GHC.Types.Int @ GHC.Types.Char $dEq $dEq1
  = Main.$s$fEqBinTree2
"SPEC/Main $fEqBinTree @ Int @ [Int]" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                GHC.Types.Int
                                                      $dEq1 :: GHC.Classes.Eq [GHC.Types.Int]
  BinTree.$fEqBinTree @ GHC.Types.Int @ [GHC.Types.Int] $dEq $dEq1
  = Main.$s$fEqBinTree
"SPEC/Main $fEqBinTree @ [Char] @ Float" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                   [GHC.Types.Char]
                                                         $dEq1 :: GHC.Classes.Eq GHC.Types.Float
  BinTree.$fEqBinTree @ [GHC.Types.Char] @ GHC.Types.Float $dEq $dEq1
  = Main.$s$fEq(,)_$s$fEqBinTree
"SPEC/Main $fEqMaybe @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                      GHC.Types.Int
  GHC.Base.$fEqMaybe @ GHC.Types.Int $dEq = Main.$s$fEqMaybe
"SPEC/Main $fShow(,) @ (BinTree String Float) @ Float" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                   (BinTree.BinTree
                                                                                      GHC.Base.String
                                                                                      GHC.Types.Float)
                                                                       $dShow1 :: GHC.Show.Show
                                                                                    GHC.Types.Float
  GHC.Show.$fShow(,) @ (BinTree.BinTree
                          GHC.Base.String GHC.Types.Float)
                     @ GHC.Types.Float
                     $dShow
                     $dShow1
  = Main.$s$fShow(,)
"SPEC/Main $fShow(,) @ (BinTree String Float, Float) @ Bool" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                         (BinTree.BinTree
                                                                                            GHC.Base.String
                                                                                            GHC.Types.Float,
                                                                                          GHC.Types.Float)
                                                                             $dShow1 :: GHC.Show.Show
                                                                                          GHC.Types.Bool
  GHC.Show.$fShow(,) @ (BinTree.BinTree
                          GHC.Base.String GHC.Types.Float,
                        GHC.Types.Float)
                     @ GHC.Types.Bool
                     $dShow
                     $dShow1
  = Main.$s$fShow(,)4
"SPEC/Main $fShow(,)_$cshow @ (BinTree String Float) @ Float" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                          (BinTree.BinTree
                                                                                             GHC.Base.String
                                                                                             GHC.Types.Float)
                                                                              $dShow1 :: GHC.Show.Show
                                                                                           GHC.Types.Float
  GHC.Show.$fShow(,)_$cshow @ (BinTree.BinTree
                                 GHC.Base.String GHC.Types.Float)
                            @ GHC.Types.Float
                            $dShow
                            $dShow1
  = Main.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/Main $fShow(,)_$cshow @ (BinTree String Float, Float) @ Bool" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                (BinTree.BinTree
                                                                                                   GHC.Base.String
                                                                                                   GHC.Types.Float,
                                                                                                 GHC.Types.Float)
                                                                                    $dShow1 :: GHC.Show.Show
                                                                                                 GHC.Types.Bool
  GHC.Show.$fShow(,)_$cshow @ (BinTree.BinTree
                                 GHC.Base.String GHC.Types.Float,
                               GHC.Types.Float)
                            @ GHC.Types.Bool
                            $dShow
                            $dShow1
  = Main.$s$fShow(,)_$s$fShow(,)_$cshow1
"SPEC/Main $fShow(,)_$cshowList @ (BinTree String Float) @ Float" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                              (BinTree.BinTree
                                                                                                 GHC.Base.String
                                                                                                 GHC.Types.Float)
                                                                                  $dShow1 :: GHC.Show.Show
                                                                                               GHC.Types.Float
  GHC.Show.$fShow(,)_$cshowList @ (BinTree.BinTree
                                     GHC.Base.String GHC.Types.Float)
                                @ GHC.Types.Float
                                $dShow
                                $dShow1
  = Main.$s$fShow(,)_$s$fShow(,)_$cshowList
"SPEC/Main $fShow(,)_$cshowList @ (BinTree String Float,
                                  Float) @ Bool" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                                                      (BinTree.BinTree
                                                                                                                                         GHC.Base.String
                                                                                                                                         GHC.Types.Float,
                                                                                                                                       GHC.Types.Float)
                                                                                                                          $dShow1 :: GHC.Show.Show
                                                                                                                                       GHC.Types.Bool
  GHC.Show.$fShow(,)_$cshowList @ (BinTree.BinTree
                                     GHC.Base.String GHC.Types.Float,
                                   GHC.Types.Float)
                                @ GHC.Types.Bool
                                $dShow
                                $dShow1
  = Main.$s$fShow(,)_$s$fShow(,)_$cshowList1
"SPEC/Main $fShowBinTree @ Char @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                   GHC.Types.Char
                                                       $dShow1 :: GHC.Show.Show GHC.Types.Int
  BinTree.$fShowBinTree @ GHC.Types.Char
                        @ GHC.Types.Int
                        $dShow
                        $dShow1
  = Main.$s$fShowBinTree6
"SPEC/Main $fShowBinTree @ Int @ Char" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                   GHC.Types.Int
                                                       $dShow1 :: GHC.Show.Show GHC.Types.Char
  BinTree.$fShowBinTree @ GHC.Types.Int
                        @ GHC.Types.Char
                        $dShow
                        $dShow1
  = Main.$s$fShowBinTree3
"SPEC/Main $fShowBinTree @ Int @ [Int]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                    GHC.Types.Int
                                                        $dShow1 :: GHC.Show.Show [GHC.Types.Int]
  BinTree.$fShowBinTree @ GHC.Types.Int
                        @ [GHC.Types.Int]
                        $dShow
                        $dShow1
  = Main.$s$fShowBinTree
"SPEC/Main $fShowBinTree @ [Char] @ Float" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                       [GHC.Types.Char]
                                                           $dShow1 :: GHC.Show.Show GHC.Types.Float
  BinTree.$fShowBinTree @ [GHC.Types.Char]
                        @ GHC.Types.Float
                        $dShow
                        $dShow1
  = Main.$s$fShow(,)_$s$fShowBinTree
"SPEC/Main $fShowMaybe @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          GHC.Types.Int
  GHC.Show.$fShowMaybe @ GHC.Types.Int $dShow = Main.$s$fShowMaybe
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

